{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice2/src/container/CoinContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport \"../components/CoinList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinContainer() {\n  _s();\n\n  var coinTotal = new Object();\n  coinTotal = useSelector(state => state.Coin.marketNames);\n  const upbitCoinList = Object.keys(coinTotal.data);\n  if (!coinTotal) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"asdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), upbitCoinList.map(coinData => {\n      return /*#__PURE__*/_jsxDEV(CoinList, {\n        one_coin: coinTotal.data[coinData],\n        one_coin_Sym: coinData\n      }, `coinlist-${coinData}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this); //<CoinList coins={coinTotal.data} />\n}\n\n_s(CoinContainer, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = CoinContainer;\nexport default CoinContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinContainer\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/container/CoinContainer.js"],"names":["React","useSelector","useDispatch","CoinList","CoinContainer","coinTotal","Object","state","Coin","marketNames","upbitCoinList","keys","data","map","coinData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,4BAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,MAAIC,SAAS,GAAG,IAAIC,MAAJ,EAAhB;AACAD,EAAAA,SAAS,GAAGJ,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,WAAvB,CAAvB;AAEA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,IAAP,CAAYN,SAAS,CAACO,IAAtB,CAAtB;AAEA,MAAI,CAACP,SAAL,EAAgB,OAAO,IAAP;AAChB,sBAEI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAUQK,aAAa,CAACG,GAAd,CAAmBC,QAAD,IAAc;AAC5B,0BAAO,QAAC,QAAD;AAAuC,QAAA,QAAQ,EAAET,SAAS,CAACO,IAAV,CAAeE,QAAf,CAAjD;AAA2E,QAAA,YAAY,EAAEA;AAAzF,SAAgB,YAAWA,QAAS,EAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAPqB,CAyBrB;AACH;;GA1BQV,a;UAEOH,W;;;KAFPG,a;AA4BT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport \"../components/CoinList.css\";\n\nfunction CoinContainer() {\n    var coinTotal = new Object();\n    coinTotal = useSelector((state) => state.Coin.marketNames);\n\n    const upbitCoinList = Object.keys(coinTotal.data);\n\n    if (!coinTotal) return null;\n    return (\n\n        <div>\n            <div className='coin-container'>\n                <div className=\"coin-row\" >\n                    <div className='coin'>\n\n                        <h1>asdf</h1>\n                    </div>\n                </div>\n            </div>\n            {\n                upbitCoinList.map((coinData) => {\n                    return <CoinList key={`coinlist-${coinData}`} one_coin={coinTotal.data[coinData]} one_coin_Sym={coinData} />\n                })\n            }\n        </div>\n    )\n    //<CoinList coins={coinTotal.data} />\n}\n\nexport default CoinContainer;"]},"metadata":{},"sourceType":"module"}