{"ast":null,"code":"import { takeEvery, delay, put, select, take } from \"redux-saga/effects\";\nimport React from 'react';\nconst INCREASE = \"INCREASE\";\nconst INCREASE_ASYNC = \"INCREASE_ASYNC\";\nconst CONNECT_UPBIT_SOCKET = \"UPBIT_SOCKET\";\nexport const connectUpbitSocket = () => ({\n  type: \"CONNECT_UPBIT_SOCKET\"\n});\nexport const increase = () => ({\n  type: INCREASE\n});\n\nfunction* increaseSaga() {\n  yield delay(1000);\n  yield put(increase());\n}\n\nfunction* connectcoinSaga() {\n  yield delay(1000);\n}\n\nexport function* processCoinSaga() {\n  //yield takeEvery(CONNECT_UPBIT_SOCKET, connectcoinSaga);\n  yield takeEvery(INCREASE_ASYNC, increaseSaga);\n}\nconst initalState = 0;\nexport default function processCoin(state = initalState, action) {\n  switch (action.type) {\n    case INCREASE:\n      return state;\n    //+ 1;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/Reducer/coinReducer.js"],"names":["takeEvery","delay","put","select","take","React","INCREASE","INCREASE_ASYNC","CONNECT_UPBIT_SOCKET","connectUpbitSocket","type","increase","increaseSaga","connectcoinSaga","processCoinSaga","initalState","processCoin","state","action"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,IAAxC,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,oBAAoB,GAAG,cAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AACrCC,EAAAA,IAAI,EAAE;AAD+B,CAAP,CAA3B;AAIP,OAAO,MAAMC,QAAQ,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAAjB;;AAEP,UAAUM,YAAV,GAAyB;AACrB,QAAMX,KAAK,CAAC,IAAD,CAAX;AACA,QAAMC,GAAG,CAACS,QAAQ,EAAT,CAAT;AACH;;AAGD,UAAUE,eAAV,GAA4B;AACxB,QAAMZ,KAAK,CAAC,IAAD,CAAX;AACH;;AAED,OAAO,UAAUa,eAAV,GAA4B;AAC/B;AACA,QAAMd,SAAS,CAACO,cAAD,EAAiBK,YAAjB,CAAf;AACH;AAED,MAAMG,WAAW,GAAG,CAApB;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,WAA7B,EAA0CG,MAA1C,EAAkD;AAC7D,UAAQA,MAAM,CAACR,IAAf;AACI,SAAKJ,QAAL;AACI,aAAOW,KAAP;AAAc;;AAClB;AACI,aAAOA,KAAP;AAJR;AAMH","sourcesContent":["import { takeEvery, delay, put, select, take } from \"redux-saga/effects\";\nimport React from 'react';\n\nconst INCREASE = \"INCREASE\";\nconst INCREASE_ASYNC = \"INCREASE_ASYNC\";\nconst CONNECT_UPBIT_SOCKET = \"UPBIT_SOCKET\";\n\nexport const connectUpbitSocket = () => ({\n    type: \"CONNECT_UPBIT_SOCKET\"\n});\n\nexport const increase = () => ({ type: INCREASE });\n\nfunction* increaseSaga() {\n    yield delay(1000);\n    yield put(increase());\n}\n\n\nfunction* connectcoinSaga() {\n    yield delay(1000);\n}\n\nexport function* processCoinSaga() {\n    //yield takeEvery(CONNECT_UPBIT_SOCKET, connectcoinSaga);\n    yield takeEvery(INCREASE_ASYNC, increaseSaga);\n}\n\nconst initalState = 0;\nexport default function processCoin(state = initalState, action) {\n    switch (action.type) {\n        case INCREASE:\n            return state; //+ 1;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}