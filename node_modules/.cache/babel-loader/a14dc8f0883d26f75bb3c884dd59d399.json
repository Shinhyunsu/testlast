{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinContainer from \"./container/CoinContainer\";\nimport { startInit, getMarketNameSaga, startInitAsync } from './Reducer/coinReducer';\nimport \"./App.css\";\nimport { authService } from \"fbase\";\nimport AppRouter from \"./Router\";\nimport { collection, addDoc, getFirestore, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(startInit());\n  }, [dispatch]);\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(async () => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        const authCheck = async () => {\n          const db = await getFirestore();\n          const querySnapshot = await getDocs(collection(db, \"users\"));\n          querySnapshot.forEach(doc => {\n            if (doc.data().email === user.email) {\n              console.log(\"already email\");\n\n              if (doc.data().ipaddress === ipv4) {\n                console.log(\"ok\");\n              } else {\n                console.log(\"error!!!\");\n              }\n            }\n\n            console.log(doc.data().useremail);\n          });\n        };\n\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true); //console.log(user);\n    });\n  }, []);\n  /*\n  <div className=\"coin-app\">\n      <CoinContainer />\n    </div>\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this) : 'Initializing....', /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 Ncrypto \", new Date().getFullYear(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/U3k1HS0pIEEQVaxvF2NP94eomg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/App.js"],"names":["React","useEffect","useState","useSelector","useDispatch","CoinContainer","startInit","getMarketNameSaga","startInitAsync","authService","AppRouter","collection","addDoc","getFirestore","getDocs","App","dispatch","init","setInit","isLoggedIn","setIsLoggedIn","onAuthStateChanged","user","authCheck","db","querySnapshot","forEach","doc","data","email","console","log","ipaddress","ipv4","useremail","Date","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,SAAT,EAAoBC,iBAApB,EAAuCC,cAAvC,QAA6D,uBAA7D;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,EAA2CC,OAA3C,QAA0D,oBAA1D;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AAED,GAHQ,EAGN,CAACU,QAAD,CAHM,CAAT;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpBQ,IAAAA,WAAW,CAACY,kBAAZ,CAAgCC,IAAD,IAAU;AACvC,UAAIA,IAAJ,EAAU;AACR,cAAMC,SAAS,GAAG,YAAY;AAC5B,gBAAMC,EAAE,GAAG,MAAMX,YAAY,EAA7B;AACA,gBAAMY,aAAa,GAAG,MAAMX,OAAO,CAACH,UAAU,CAACa,EAAD,EAAK,OAAL,CAAX,CAAnC;AACAC,UAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7B,gBAAIA,GAAG,CAACC,IAAJ,GAAWC,KAAX,KAAqBP,IAAI,CAACO,KAA9B,EAAqC;AACnCC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,kBAAIJ,GAAG,CAACC,IAAJ,GAAWI,SAAX,KAAyBC,IAA7B,EAAmC;AACjCH,gBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,eAFD,MAEO;AACLD,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF;;AACDD,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,GAAWM,SAAvB;AACD,WAVD;AAWD,SAdD;;AAgBAd,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAlBD,MAkBO;AACLA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP,CAtBuC,CAuBvC;AACD,KAxBD;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA;AACF;AACA;AACA;AACA;;AACE,sBACE;AAAA,eACGD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2C,kBADlD,eAEE;AAAA,kCAAwB,IAAIgB,IAAJ,GAAWC,WAAX,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAlDQrB,G;UAEUX,W;;;KAFVW,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinContainer from \"./container/CoinContainer\";\nimport { startInit, getMarketNameSaga, startInitAsync } from './Reducer/coinReducer';\nimport \"./App.css\";\nimport { authService } from \"fbase\";\nimport AppRouter from \"./Router\";\nimport { collection, addDoc, getFirestore, getDocs } from \"firebase/firestore\"\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(startInit());\n\n  }, [dispatch]);\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(async () => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        const authCheck = async () => {\n          const db = await getFirestore();\n          const querySnapshot = await getDocs(collection(db, \"users\"));\n          querySnapshot.forEach((doc) => {\n            if (doc.data().email === user.email) {\n              console.log(\"already email\");\n              if (doc.data().ipaddress === ipv4) {\n                console.log(\"ok\");\n              } else {\n                console.log(\"error!!!\");\n              }\n            }\n            console.log(doc.data().useremail);\n          });\n        }\n\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n      //console.log(user);\n    });\n  }, [])\n\n  /*\n<div className=\"coin-app\">\n      <CoinContainer />\n    </div>\n  */\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : 'Initializing....'}\n      <footer>&copy; Ncrypto {new Date().getFullYear()} </footer>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}