{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice2/src/routes/Auth.js\";\nimport React from \"react\";\nimport { authService, authGoogleProvider, authsignInWithPopup } from \"fbase\";\nimport { collection, addDoc, getFirestore, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const ipData = await fetch('https://geolocation-db.com/json/');\n    const locationIp = await ipData.json();\n    const ipv4 = locationIp.IPv4;\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === 'google') {\n      provider = new authGoogleProvider();\n    }\n\n    const data = await authsignInWithPopup(authService, provider);\n    let email = \"\";\n\n    if (data) {\n      email = data.user.email;\n    }\n\n    const db = await getFirestore();\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    let check = \"\";\n    querySnapshot.forEach(doc => {\n      if (doc.data().email === email) {\n        check = \"emailOK\";\n\n        if (doc.data().ipaddress === ipv4) {\n          check = \"ipOK\";\n        } else if (doc.data().ipaddress === 'init') {\n          check = \"NEW\";\n        } else {\n          check = \"FAIL\";\n        }\n      }\n    });\n    console.log(check);\n    /*\n            const docRef = await addDoc(collection(db, \"users\"), {\n                useremail: email,\n                ipaddress: ipv4\n            });\n            console.log(docRef.id);*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSocialClick,\n      name: \"google\",\n      children: \"Continue wih Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/routes/Auth.js"],"names":["React","authService","authGoogleProvider","authsignInWithPopup","collection","addDoc","getFirestore","getDocs","Auth","onSocialClick","event","ipData","fetch","locationIp","json","ipv4","IPv4","target","name","provider","data","email","user","db","querySnapshot","check","forEach","doc","ipaddress","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,mBAA1C,QAAqE,OAArE;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,EAA2CC,OAA3C,QAA0D,oBAA1D;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA1B;AACA,UAAMC,UAAU,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAzB;AACA,UAAMC,IAAI,GAAGF,UAAU,CAACG,IAAxB;AAGA,UAAM;AACFC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFR,KAFJ;AAGA,QAAIS,QAAJ;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AACnBC,MAAAA,QAAQ,GAAG,IAAIjB,kBAAJ,EAAX;AACH;;AACD,UAAMkB,IAAI,GAAG,MAAMjB,mBAAmB,CAACF,WAAD,EAAckB,QAAd,CAAtC;AACA,QAAIE,KAAK,GAAG,EAAZ;;AACA,QAAID,IAAJ,EAAU;AACNC,MAAAA,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUD,KAAlB;AACH;;AAED,UAAME,EAAE,GAAG,MAAMjB,YAAY,EAA7B;AACA,UAAMkB,aAAa,GAAG,MAAMjB,OAAO,CAACH,UAAU,CAACmB,EAAD,EAAK,OAAL,CAAX,CAAnC;AACA,QAAIE,KAAK,GAAG,EAAZ;AACAD,IAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACP,IAAJ,GAAWC,KAAX,KAAqBA,KAAzB,EAAgC;AAC5BI,QAAAA,KAAK,GAAG,SAAR;;AACA,YAAIE,GAAG,CAACP,IAAJ,GAAWQ,SAAX,KAAyBb,IAA7B,EAAmC;AAC/BU,UAAAA,KAAK,GAAG,MAAR;AACH,SAFD,MAEO,IAAIE,GAAG,CAACP,IAAJ,GAAWQ,SAAX,KAAyB,MAA7B,EAAqC;AACxCH,UAAAA,KAAK,GAAG,KAAR;AACH,SAFM,MAEA;AACHA,UAAAA,KAAK,GAAG,MAAR;AACH;AACJ;AACJ,KAXD;AAYAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA;AACR;AACA;AACA;AACA;AACA;AACK,GA1CD;;AA6CA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEhB,aAAjB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArDD;;KAAMD,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { authService, authGoogleProvider, authsignInWithPopup } from \"fbase\";\nimport { collection, addDoc, getFirestore, getDocs } from \"firebase/firestore\"\n\n\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const ipData = await fetch('https://geolocation-db.com/json/');\n        const locationIp = await ipData.json();\n        const ipv4 = locationIp.IPv4;\n\n\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === 'google') {\n            provider = new authGoogleProvider();\n        }\n        const data = await authsignInWithPopup(authService, provider);\n        let email = \"\";\n        if (data) {\n            email = data.user.email;\n        }\n\n        const db = await getFirestore();\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        let check = \"\";\n        querySnapshot.forEach((doc) => {\n            if (doc.data().email === email) {\n                check = \"emailOK\";\n                if (doc.data().ipaddress === ipv4) {\n                    check = \"ipOK\";\n                } else if (doc.data().ipaddress === 'init') {\n                    check = \"NEW\";\n                } else {\n                    check = \"FAIL\";\n                }\n            }\n        });\n        console.log(check);\n\n        /*\n                const docRef = await addDoc(collection(db, \"users\"), {\n                    useremail: email,\n                    ipaddress: ipv4\n                });\n                console.log(docRef.id);*/\n    }\n\n\n    return (\n        <div>\n            <button onClick={onSocialClick} name='google'>\n                Continue wih Google\n           </button>\n        </div>\n    )\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}