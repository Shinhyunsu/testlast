{"ast":null,"code":"import React from 'react';\nimport { takeEvery, call, put, select, flush, delay } from \"redux-saga/effects\";\nimport { coinApi } from \"../Api/api\";\nconst START_INIT = \"START_INIT\";\nconst START_INIT_ASYNC = \"START_INIT_ASYNC\";\nconst GET_MARKET_NAMES = \"GET_MARKET_NAMES\";\nexport const startInitAsync = () => ({\n  type: START_INIT_ASYNC\n});\n\nconst getMarketNameSaga = () => ({\n  type: GET_MARKET_NAMES\n});\n\nconst startInit = () => ({\n  type: START_INIT\n});\n/*\nconst createRequestSaga = (type, api) => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const ERROR = `${type}_ERROR`;\n\n    return function* (action = {}) {\n        // yield put(startLoading(type));\n        const res = yield call(api, action.payload);\n        console.log(res);\n        // yield put(finishLoading(type));\n    }\n};\n*/\n\n\nfunction* startInitSaga() {\n  yield delay(2000);\n  yield put(getMarketNameSaga());\n}\n\nfunction* coinSaga() {//yield takeEvery(START_INIT, startInitSaga);\n}\n\nconst initialState = {\n  symbol: \"\",\n  upbitSymbol: \"\",\n  bithumbSymbol: \"\",\n  huobiSymbol: \"\",\n  binanceSymbol: \"\",\n  upbitPrice: \"\",\n  bithumbPrice: \"\",\n  huobiPrice: \"\",\n  binancePrice: \"\"\n};\n\nconst coinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MARKET_NAMES:\n      console.log(11);\n      return;\n\n    case START_INIT:\n      console.log(12);\n      return state + 1;\n\n    default:\n      return state;\n  }\n};\n\nexport { coinReducer, coinSaga, startInit, getMarketNameSaga };","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/Reducer/coinReducer.js"],"names":["React","takeEvery","call","put","select","flush","delay","coinApi","START_INIT","START_INIT_ASYNC","GET_MARKET_NAMES","startInitAsync","type","getMarketNameSaga","startInit","startInitSaga","coinSaga","initialState","symbol","upbitSymbol","bithumbSymbol","huobiSymbol","binanceSymbol","upbitPrice","bithumbPrice","huobiPrice","binancePrice","coinReducer","state","action","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8CC,KAA9C,QAA2D,oBAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAGA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEH;AAAR,CAAP,CAAvB;;AACP,MAAMI,iBAAiB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEF;AAAR,CAAP,CAA1B;;AACA,MAAMI,SAAS,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAUO,aAAV,GAA0B;AACtB,QAAMT,KAAK,CAAC,IAAD,CAAX;AACA,QAAMH,GAAG,CAACU,iBAAiB,EAAlB,CAAT;AACH;;AACD,UAAUG,QAAV,GAAqB,CACjB;AACH;;AAGD,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAOjBC,EAAAA,UAAU,EAAE,EAPK;AAQjBC,EAAAA,YAAY,EAAE,EARG;AASjBC,EAAAA,UAAU,EAAE,EATK;AAUjBC,EAAAA,YAAY,EAAE;AAVG,CAArB;;AAaA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACjB,IAAf;AACI,SAAKF,gBAAL;AACIoB,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACA;;AACJ,SAAKvB,UAAL;AACIsB,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACA,aAAOH,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AARR;AAWH,CAZD;;AAaA,SACID,WADJ,EAEIX,QAFJ,EAGIF,SAHJ,EAIID,iBAJJ","sourcesContent":["\nimport React from 'react';\nimport { takeEvery, call, put, select, flush, delay } from \"redux-saga/effects\";\nimport { coinApi } from \"../Api/api\";\n\nconst START_INIT = \"START_INIT\";\nconst START_INIT_ASYNC = \"START_INIT_ASYNC\";\nconst GET_MARKET_NAMES = \"GET_MARKET_NAMES\";\n\n\nexport const startInitAsync = () => ({ type: START_INIT_ASYNC });\nconst getMarketNameSaga = () => ({ type: GET_MARKET_NAMES });\nconst startInit = () => ({ type: START_INIT });\n/*\nconst createRequestSaga = (type, api) => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const ERROR = `${type}_ERROR`;\n\n    return function* (action = {}) {\n        // yield put(startLoading(type));\n        const res = yield call(api, action.payload);\n        console.log(res);\n        // yield put(finishLoading(type));\n    }\n};\n*/\nfunction* startInitSaga() {\n    yield delay(2000);\n    yield put(getMarketNameSaga());\n}\nfunction* coinSaga() {\n    //yield takeEvery(START_INIT, startInitSaga);\n}\n\n\nconst initialState = {\n    symbol: \"\",\n    upbitSymbol: \"\",\n    bithumbSymbol: \"\",\n    huobiSymbol: \"\",\n    binanceSymbol: \"\",\n\n    upbitPrice: \"\",\n    bithumbPrice: \"\",\n    huobiPrice: \"\",\n    binancePrice: \"\",\n};\n\nconst coinReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MARKET_NAMES:\n            console.log(11);\n            return;\n        case START_INIT:\n            console.log(12);\n            return state + 1;\n        default:\n            return state;\n\n    }\n}\nexport {\n    coinReducer,\n    coinSaga,\n    startInit,\n    getMarketNameSaga\n}"]},"metadata":{},"sourceType":"module"}