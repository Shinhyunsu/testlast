{"ast":null,"code":"import { takeEvery, delay, put, select, take } from \"redux-saga/effects\";\nimport React from 'react';\nimport { coinApi } from \"../Api/api\";\nimport { startLoading, finishLoading } from \"../Reducer/loadingReducer\";\nconst START_INIT = \"START_INIT\";\nconst GET_MARKET_NAMES = \"GET_MARKET_NAMES\";\nconst getMarketNameSaga = createRequestSaga(GET_MARKET_NAMES, coinApi.getMarketcodes);\n\nconst createRequestSaga = (type, api, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n  return function* (action = {}) {\n    yield put(startLoading(type));\n    const res = yield call(api, action.payload);\n    console.log(res);\n    yield put(finishLoading(type));\n  };\n};\n\nconst startInit = () => ({\n  type: START_INIT\n});\n\nfunction* startInitSaga() {\n  yield getMarketNameSaga();\n}\n\nfunction* coinSaga() {\n  yield takeEvery(START_INIT, startInitSaga);\n  yield takeEvery(GET_MARKET_NAMES, getMarketNameSaga);\n}\n\nconst initialState = {\n  symbol: \"\",\n  upbitSymbol: \"\",\n  bithumbSymbol: \"\",\n  huobiSymbol: \"\",\n  binanceSymbol: \"\",\n  upbitPrice: \"\",\n  bithumbPrice: \"\",\n  huobiPrice: \"\",\n  binancePrice: \"\"\n};\n\nconst coinReducer = (state = initialSate, action) => {\n  switch (action.type) {\n    case GET_MARKET_NAMES:\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport { coinReducer, coinSaga };","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/Reducer/coinReducer.js"],"names":["takeEvery","delay","put","select","take","React","coinApi","startLoading","finishLoading","START_INIT","GET_MARKET_NAMES","getMarketNameSaga","createRequestSaga","getMarketcodes","type","api","dataMaker","SUCCESS","ERROR","action","res","call","payload","console","log","startInit","startInitSaga","coinSaga","initialState","symbol","upbitSymbol","bithumbSymbol","huobiSymbol","binanceSymbol","upbitPrice","bithumbPrice","huobiPrice","binancePrice","coinReducer","state","initialSate"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,IAAxC,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,2BAA5C;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,iBAAiB,GAAGC,iBAAiB,CACvCF,gBADuC,EAEvCJ,OAAO,CAACO,cAF+B,CAA3C;;AAOA,MAAMD,iBAAiB,GAAG,CAACE,IAAD,EAAOC,GAAP,EAAYC,SAAZ,KAA0B;AAChD,QAAMC,OAAO,GAAI,GAAEH,IAAK,UAAxB;AACA,QAAMI,KAAK,GAAI,GAAEJ,IAAK,QAAtB;AAEA,SAAO,WAAWK,MAAM,GAAG,EAApB,EAAwB;AAC3B,UAAMjB,GAAG,CAACK,YAAY,CAACO,IAAD,CAAb,CAAT;AACA,UAAMM,GAAG,GAAG,MAAMC,IAAI,CAACN,GAAD,EAAMI,MAAM,CAACG,OAAb,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,UAAMlB,GAAG,CAACM,aAAa,CAACM,IAAD,CAAd,CAAT;AAEH,GAND;AAOH,CAXD;;AAeA,MAAMW,SAAS,GAAG,OAAO;AAAEX,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAAlB;;AACA,UAAUiB,aAAV,GAA0B;AACtB,QAAMf,iBAAiB,EAAvB;AACH;;AAGD,UAAUgB,QAAV,GAAqB;AACjB,QAAM3B,SAAS,CAACS,UAAD,EAAaiB,aAAb,CAAf;AACA,QAAM1B,SAAS,CAACU,gBAAD,EAAmBC,iBAAnB,CAAf;AACH;;AACD,MAAMiB,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAOjBC,EAAAA,UAAU,EAAE,EAPK;AAQjBC,EAAAA,YAAY,EAAE,EARG;AASjBC,EAAAA,UAAU,EAAE,EATK;AAUjBC,EAAAA,YAAY,EAAE;AAVG,CAArB;;AAaA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGC,WAAT,EAAsBrB,MAAtB,KAAiC;AACjD,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKJ,gBAAL;AAEI;;AACJ;AACI,aAAO6B,KAAP;AALR;AAQH,CATD;;AAWA,SACID,WADJ,EAEIX,QAFJ","sourcesContent":["import { takeEvery, delay, put, select, take } from \"redux-saga/effects\";\nimport React from 'react';\nimport { coinApi } from \"../Api/api\";\nimport { startLoading, finishLoading } from \"../Reducer/loadingReducer\";\n\nconst START_INIT = \"START_INIT\";\nconst GET_MARKET_NAMES = \"GET_MARKET_NAMES\";\n\nconst getMarketNameSaga = createRequestSaga(\n    GET_MARKET_NAMES,\n    coinApi.getMarketcodes,\n\n);\n\n\nconst createRequestSaga = (type, api, dataMaker) => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const ERROR = `${type}_ERROR`;\n\n    return function* (action = {}) {\n        yield put(startLoading(type));\n        const res = yield call(api, action.payload);\n        console.log(res);\n        yield put(finishLoading(type));\n\n    }\n};\n\n\n\nconst startInit = () => ({ type: START_INIT });\nfunction* startInitSaga() {\n    yield getMarketNameSaga();\n}\n\n\nfunction* coinSaga() {\n    yield takeEvery(START_INIT, startInitSaga);\n    yield takeEvery(GET_MARKET_NAMES, getMarketNameSaga);\n}\nconst initialState = {\n    symbol: \"\",\n    upbitSymbol: \"\",\n    bithumbSymbol: \"\",\n    huobiSymbol: \"\",\n    binanceSymbol: \"\",\n\n    upbitPrice: \"\",\n    bithumbPrice: \"\",\n    huobiPrice: \"\",\n    binancePrice: \"\",\n};\n\nconst coinReducer = (state = initialSate, action) => {\n    switch (action.type) {\n        case GET_MARKET_NAMES:\n\n            return\n        default:\n            return state;\n\n    }\n}\n\nexport {\n    coinReducer,\n    coinSaga\n}"]},"metadata":{},"sourceType":"module"}