{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice2/src/routes/Auth.js\";\nimport React from \"react\";\nimport { authService, authGoogleProvider, authsignInWithPopup } from \"fbase\";\nimport { collection, addDoc, getFirestore } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === 'google') {\n      provider = new authGoogleProvider();\n    }\n\n    const data = await authsignInWithPopup(authService, provider);\n    let email = \"\";\n\n    if (data) {\n      email = data.user.email;\n    }\n\n    console.log('email', email);\n    /*const db = await getFirestore();\n    const docRef = await addDoc(collection(db, \"users\"), {\n        useremail: \"11gustn9687@naver.com\",\n        ipaddress: \"123\"\n    });\n    console.log(docRef.id);*/\n\n    /*\n    const ipData = await fetch('https://geolocation-db.com/json/');\n    const locationIp = await ipData.json();\n    console.log(locationIp.IPv4);\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSocialClick,\n      name: \"google\",\n      children: \"Continue wih Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/routes/Auth.js"],"names":["React","authService","authGoogleProvider","authsignInWithPopup","collection","addDoc","getFirestore","Auth","onSocialClick","event","target","name","provider","data","email","user","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,mBAA1C,QAAqE,OAArE;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,QAAiD,oBAAjD;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAM;AACFC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADN,QAEFF,KAFJ;AAGA,QAAIG,QAAJ;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AACnBC,MAAAA,QAAQ,GAAG,IAAIV,kBAAJ,EAAX;AACH;;AACD,UAAMW,IAAI,GAAG,MAAMV,mBAAmB,CAACF,WAAD,EAAcW,QAAd,CAAtC;AACA,QAAIE,KAAK,GAAG,EAAZ;;AACA,QAAID,IAAJ,EAAU;AACNC,MAAAA,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUD,KAAlB;AACH;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA;AACR;AACA;AACA;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AAEK,GA3BD;;AA8BA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEN,aAAjB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvCD;;KAAMD,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { authService, authGoogleProvider, authsignInWithPopup } from \"fbase\";\nimport { collection, addDoc, getFirestore } from \"firebase/firestore\"\n\n\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === 'google') {\n            provider = new authGoogleProvider();\n        }\n        const data = await authsignInWithPopup(authService, provider);\n        let email = \"\";\n        if (data) {\n            email = data.user.email;\n        }\n        console.log('email', email);\n        /*const db = await getFirestore();\n        const docRef = await addDoc(collection(db, \"users\"), {\n            useremail: \"11gustn9687@naver.com\",\n            ipaddress: \"123\"\n        });\n        console.log(docRef.id);*/\n\n        /*\n        const ipData = await fetch('https://geolocation-db.com/json/');\n        const locationIp = await ipData.json();\n        console.log(locationIp.IPv4);\n*/\n\n    }\n\n\n    return (\n        <div>\n            <button onClick={onSocialClick} name='google'>\n                Continue wih Google\n           </button>\n        </div>\n    )\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}