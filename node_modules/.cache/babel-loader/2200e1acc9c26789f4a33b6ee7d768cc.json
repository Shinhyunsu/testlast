{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/container/CoinContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport \"../components/CoinList.css\";\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinContainer() {\n  _s();\n\n  var coinTotal = new Object();\n  coinTotal = useSelector(state => state.Coin.marketNames);\n  const upbitCoinList = Object.keys(coinTotal.data);\n  const upbitimgsrc = CoinMarketData[0].imgsrc;\n  const bithumbimgsrc = CoinMarketData[1].imgsrc;\n  const binanceimgsrc = CoinMarketData[2].imgsrc;\n  const binanceUsdt = coinTotal.data['USDT'];\n  if (!binanceUsdt) return null;\n  if (!coinTotal) return null; // if (parseFloat(coinTotal.data[next].totalminPer) < parseFloat(coinTotal.data[prev].totalminPer))\n\n  upbitCoinList.sort((next, prev) => {\n    if (parseFloat(coinTotal.data[next].totalminPer) < parseFloat(coinTotal.data[prev].totalminPer)) return -1;else return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CoinContainer, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = CoinContainer;\nexport default CoinContainer;\n/*\n\n\n        <div>\n            <div className='coin-container'>\n                <div className=\"coin-row\" >\n                    <img className=\"exchange-img\" src={upbitimgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {binanceUsdt.upbitUSDT}\n                        </p>\n                        <p className=\"coin-price\">\n                            {binanceUsdt.upbitUSDTPrice}\n                        </p>\n                    </div>\n\n                </div>\n            </div>\n            {\n                upbitCoinList.map((coinData) => {\n                    if (coinData !== 'USDT')\n                        return <CoinList key={`coinlist-${coinData}`} one_coin={coinTotal.data[coinData]} one_coin_Sym={coinData} />\n                })\n            }\n        </div>\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinContainer\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/container/CoinContainer.js"],"names":["React","useSelector","useDispatch","CoinList","CoinMarketData","CoinContainer","coinTotal","Object","state","Coin","marketNames","upbitCoinList","keys","data","upbitimgsrc","imgsrc","bithumbimgsrc","binanceimgsrc","binanceUsdt","sort","next","prev","parseFloat","totalminPer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,4BAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,MAAIC,SAAS,GAAG,IAAIC,MAAJ,EAAhB;AACAD,EAAAA,SAAS,GAAGL,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,WAAvB,CAAvB;AAEA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,IAAP,CAAYN,SAAS,CAACO,IAAtB,CAAtB;AACA,QAAMC,WAAW,GAAGV,cAAc,CAAC,CAAD,CAAd,CAAkBW,MAAtC;AACA,QAAMC,aAAa,GAAGZ,cAAc,CAAC,CAAD,CAAd,CAAkBW,MAAxC;AACA,QAAME,aAAa,GAAGb,cAAc,CAAC,CAAD,CAAd,CAAkBW,MAAxC;AAEA,QAAMG,WAAW,GAAGZ,SAAS,CAACO,IAAV,CAAe,MAAf,CAApB;AAGA,MAAI,CAACK,WAAL,EAAkB,OAAO,IAAP;AAClB,MAAI,CAACZ,SAAL,EAAgB,OAAO,IAAP,CAbK,CAgBrB;;AACAK,EAAAA,aAAa,CAACQ,IAAd,CAAmB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC/B,QAAIC,UAAU,CAAChB,SAAS,CAACO,IAAV,CAAeO,IAAf,EAAqBG,WAAtB,CAAV,GAA+CD,UAAU,CAAChB,SAAS,CAACO,IAAV,CAAeQ,IAAf,EAAqBE,WAAtB,CAA7D,EACI,OAAO,CAAC,CAAR,CADJ,KAGI,OAAO,CAAP;AACP,GALD;AASA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAhCQlB,a;UAEOJ,W;;;KAFPI,a;AAkCT,eAAeA,aAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport \"../components/CoinList.css\";\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\n\nfunction CoinContainer() {\n    var coinTotal = new Object();\n    coinTotal = useSelector((state) => state.Coin.marketNames);\n\n    const upbitCoinList = Object.keys(coinTotal.data);\n    const upbitimgsrc = CoinMarketData[0].imgsrc;\n    const bithumbimgsrc = CoinMarketData[1].imgsrc;\n    const binanceimgsrc = CoinMarketData[2].imgsrc;\n\n    const binanceUsdt = coinTotal.data['USDT'];\n\n\n    if (!binanceUsdt) return null;\n    if (!coinTotal) return null;\n\n\n    // if (parseFloat(coinTotal.data[next].totalminPer) < parseFloat(coinTotal.data[prev].totalminPer))\n    upbitCoinList.sort((next, prev) => {\n        if (parseFloat(coinTotal.data[next].totalminPer) < parseFloat(coinTotal.data[prev].totalminPer))\n            return -1;\n        else\n            return 0;\n    });\n\n\n\n    return (\n        <div>\n\n        </div>\n    )\n\n}\n\nexport default CoinContainer;\n\n/*\n\n\n        <div>\n            <div className='coin-container'>\n                <div className=\"coin-row\" >\n                    <img className=\"exchange-img\" src={upbitimgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {binanceUsdt.upbitUSDT}\n                        </p>\n                        <p className=\"coin-price\">\n                            {binanceUsdt.upbitUSDTPrice}\n                        </p>\n                    </div>\n\n                </div>\n            </div>\n            {\n                upbitCoinList.map((coinData) => {\n                    if (coinData !== 'USDT')\n                        return <CoinList key={`coinlist-${coinData}`} one_coin={coinTotal.data[coinData]} one_coin_Sym={coinData} />\n                })\n            }\n        </div>\n\n*/"]},"metadata":{},"sourceType":"module"}