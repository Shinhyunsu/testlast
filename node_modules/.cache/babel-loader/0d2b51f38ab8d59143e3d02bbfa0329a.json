{"ast":null,"code":"var _jsxFileName = \"/Users/sinhyeonsu/Documents/coingetprice2/src/container/CoinContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinContainer() {\n  _s();\n\n  let Coindata = useSelector(state => state.Coin.upbitTotalNames);\n\n  if (Coindata) {\n    //let UpbitAlldata = ;\n    //console.log(UpbitAlldata);\n\n    /*Coindata.map(coin => {\n         console.log(coin);\n     });*/\n    let marketNamesArr = Object.keys(Coindata.data);\n    console.log(marketNamesArr); //console.log(\"1\", Coindata);\n  } //let marketNamesArr = Object.keys();\n  //onsole.log();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CoinContainer, \"uc1AHELRtqFJEL6Dt4dX3eb82KQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = CoinContainer;\nexport default CoinContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinContainer\");","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/container/CoinContainer.js"],"names":["useSelector","useDispatch","CoinList","CoinContainer","Coindata","state","Coin","upbitTotalNames","marketNamesArr","Object","keys","data","console","log"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,MAAIC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,eAAvB,CAA1B;;AAEA,MAAIH,QAAJ,EAAc;AACV;AACA;;AACA;AACR;AACA;AACQ,QAAII,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACO,IAArB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ,EAPU,CAQV;AACH,GAZoB,CAcrB;AACA;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtBQL,a;UACUH,W;;;KADVG,a;AAwBT,eAAeA,aAAf","sourcesContent":["\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinList from '../components/CoinList';\n\nfunction CoinContainer() {\n    let Coindata = useSelector((state) => state.Coin.upbitTotalNames);\n\n    if (Coindata) {\n        //let UpbitAlldata = ;\n        //console.log(UpbitAlldata);\n        /*Coindata.map(coin => {\n             console.log(coin);\n         });*/\n        let marketNamesArr = Object.keys(Coindata.data);\n        console.log(marketNamesArr);\n        //console.log(\"1\", Coindata);\n    }\n\n    //let marketNamesArr = Object.keys();\n    //onsole.log();\n    return (\n        <div>\n\n\n        </div>\n    )\n}\n\nexport default CoinContainer;"]},"metadata":{},"sourceType":"module"}