{"ast":null,"code":"import { call, put, select, flush, delay } from \"redux-saga/effects\";\n\nconst createRequestSaga = (type, api, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n  return function* (action = {}) {\n    console.log(\"123123\");\n    yield put(type);\n\n    try {\n      const res = yield call(api, action.payload);\n      const state = yield select();\n      yield put({\n        type: SUCCESS,\n        payload: dataMaker(res.data, state)\n      }); // yield put(finishLoading(type));\n    } catch (e) {\n      yield put({\n        type: ERROR,\n        payload: e\n      }); // yield put(finishLoading(type));\n\n      throw e;\n    }\n  };\n};\n\nexport { createRequestSaga };","map":{"version":3,"sources":["/Users/sinhyeonsu/Documents/coingetprice2/src/Lib/asyncUtil.js"],"names":["call","put","select","flush","delay","createRequestSaga","type","api","dataMaker","SUCCESS","ERROR","action","console","log","res","payload","state","data","e"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,KAAnC,QAAgD,oBAAhD;;AAGA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,SAAZ,KAA0B;AAChD,QAAMC,OAAO,GAAI,GAAEH,IAAK,UAAxB;AACA,QAAMI,KAAK,GAAI,GAAEJ,IAAK,QAAtB;AAEA,SAAO,WAAWK,MAAM,GAAG,EAApB,EAAwB;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMZ,GAAG,CAACK,IAAD,CAAT;;AACA,QAAI;AACA,YAAMQ,GAAG,GAAG,MAAMd,IAAI,CAACO,GAAD,EAAMI,MAAM,CAACI,OAAb,CAAtB;AACA,YAAMC,KAAK,GAAG,MAAMd,MAAM,EAA1B;AAEA,YAAMD,GAAG,CAAC;AAAEK,QAAAA,IAAI,EAAEG,OAAR;AAAiBM,QAAAA,OAAO,EAAEP,SAAS,CAACM,GAAG,CAACG,IAAL,EAAWD,KAAX;AAAnC,OAAD,CAAT,CAJA,CAKA;AACH,KAND,CAME,OAAOE,CAAP,EAAU;AACR,YAAMjB,GAAG,CAAC;AAAEK,QAAAA,IAAI,EAAEI,KAAR;AAAeK,QAAAA,OAAO,EAAEG;AAAxB,OAAD,CAAT,CADQ,CAER;;AACA,YAAMA,CAAN;AACH;AACJ,GAdD;AAeH,CAnBD;;AAqBA,SACIb,iBADJ","sourcesContent":["import { call, put, select, flush, delay } from \"redux-saga/effects\";\n\n\nconst createRequestSaga = (type, api, dataMaker) => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const ERROR = `${type}_ERROR`;\n\n    return function* (action = {}) {\n        console.log(\"123123\");\n        yield put(type);\n        try {\n            const res = yield call(api, action.payload);\n            const state = yield select();\n\n            yield put({ type: SUCCESS, payload: dataMaker(res.data, state) });\n            // yield put(finishLoading(type));\n        } catch (e) {\n            yield put({ type: ERROR, payload: e });\n            // yield put(finishLoading(type));\n            throw e;\n        }\n    };\n};\n\nexport {\n    createRequestSaga,\n}"]},"metadata":{},"sourceType":"module"}