[{"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/index.js":"1","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/App.js":"2","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/reportWebVitals.js":"3","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Reducer/index.js":"4","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Reducer/coinReducer.js":"5","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/container/CoinContainer.js":"6","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Api/api.js":"7","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Lib/asyncUtil.js":"8","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Lib/utils.js":"9","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/components/CoinList.js":"10","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/components/Coinone.js":"11"},{"size":958,"mtime":1634186274843,"results":"12","hashOfConfig":"13"},{"size":550,"mtime":1635427705089,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1633866378915,"results":"15","hashOfConfig":"13"},{"size":292,"mtime":1634289166201,"results":"16","hashOfConfig":"13"},{"size":7932,"mtime":1637569887220,"results":"17","hashOfConfig":"13"},{"size":4364,"mtime":1637569887221,"results":"18","hashOfConfig":"13"},{"size":1165,"mtime":1637569887218,"results":"19","hashOfConfig":"13"},{"size":52421,"mtime":1638506050859,"results":"20","hashOfConfig":"13"},{"size":23399,"mtime":1637569887219,"results":"21","hashOfConfig":"13"},{"size":17756,"mtime":1637569887220,"results":"22","hashOfConfig":"13"},{"size":975,"mtime":1635869485998,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"p2zgm5",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":63,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/index.js",[],["54","55"],"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/App.js",[],"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/reportWebVitals.js",[],"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Reducer/index.js",[],"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Reducer/coinReducer.js",["56","57","58","59","60","61"],"import { takeEvery, select, } from \"redux-saga/effects\";\nimport { upbitoinApi, bithumbcoinApi, binancecoinApi, kucoinApi, coinoneApi } from \"../Api/api\";\nimport { createConnectSocketSaga, createRequestSaga, requestActions, createInitRequestSaga } from '../Lib/asyncUtil';\nimport { coinListDataUtils, coinReadDataUtils } from '../Lib/utils';\n\nconst START_INIT = \"START_INIT\";\nconst START_INIT_ASYNC = \"START_INIT_ASYNC\";\n\nconst GET_COINONE_MARKET_NAMES = \"GET_COINONE_MARKET_NAMES\";\nconst GET_COINONE_MARKET_NAMES_SUCCESS = \"GET_COINONE_MARKET_NAMES_SUCCESS\";\nconst GET_COINEONE_MARKET_NAMES_ERROR = \"GET_COINONE_MARKET_NAMES_ERROR\";\n\nconst GET_KUCOIN_MARKET_NAMES = \"GET_KUCOIN_MARKET_NAMES\";\nconst GET_KUCOIN_MARKET_NAMES_SUCCESS = \"GET_KUCOIN_MARKET_NAMES_SUCCESS\";\nconst GET_KUCOIN_MARKET_NAMES_ERROR = \"GET_KUCOIN_MARKET_NAMES_ERROR\";\n\nconst GET_UPBIT_MARKET_NAMES = \"GET_UPBIT_MARKET_NAMES\";\nconst GET_UPBIT_MARKET_NAMES_SUCCESS = \"GET_UPBIT_MARKET_NAMES_SUCCESS\";\nconst GET_UPBIT_MARKET_NAMES_ERROR = \"GET_UPBIT_MARKET_NAMES_ERROR\";\n\nconst GET_UPBIT_MARKET_PRICE_INIT = \"GET_UPBIT_MARKET_PRICE_INIT\";\nconst GET_UPBIT_MARKET_PRICE_INIT_SUCCESS = \"GET_UPBIT_MARKET_PRICE_INIT_SUCCESS\";\nconst GET_UPBIT_MARKET_PRICE_INIT_ERROR = \"GET_UPBIT_MARKET_PRICE_INIT_ERROR\";\n\nconst GET_BITHUMB_MARKET_KRW_NAMES = \"GET_BITHUMB_MARKET_KRW_NAMES\";\nconst GET_BITHUMB_MARKET_KRW_NAMES_SUCCESS = \"GET_BITHUMB_MARKET_KRW_NAMES_SUCCESS\";\nconst GET_BITHUMB_MARKET_KRW_NAMES_ERROR = \"GET_BITHUMB_MARKET_KRW_NAMES_ERROR\";\n\nconst GET_BITHUMB_MARKET_BTC_NAMES = \"GET_BITHUMB_MARKET_BTC_NAMES\";\nconst GET_BITHUMB_MARKET_BTC_NAMES_SUCCESS = \"GET_BITHUMB_MARKET_BTC_NAMES_SUCCESS\";\nconst GET_BITHUMB_MARKET_BTC_NAMES_ERROR = \"GET_BITHUMB_MARKET_BTC_NAMES_ERROR\";\n\nconst CONNECT_UPBIT_SOCKET = \"CONNECT_UPBIT_SOCKET\";\nconst CONNECT_UPBIT_SOCKET_SUCCESS = \"CONNECT_UPBIT_SOCKET_SUCCESS\";\nconst CONNECT_UPBIT_SOCKET_ERROR = \"CONNECT_UPBIT_SOCKET_ERROR\";\n\nconst CREATE_UPBIT_INIT = \"CREATE_UPBIT_INIT\";\nconst CREATE_UPBIT_INIT_SUCCESS = \"CREATE_UPBIT_INIT_SUCCESS\";\nconst CREATE_UPBIT_INIT_ERROR = \"CREATE_UPBIT_INIT_ERROR\";\n\nconst CREATE_BITHUMB_INIT = \"CREATE_BITHUMB_INIT\";\nconst CREATE_BITHUMB_INIT_SUCCESS = \"CREATE_BITHUMB_INIT_SUCCESS\";\nconst CREATE_BITHUMB_INIT_ERROR = \"CREATE_BITHUMB_INIT_ERROR\";\n\nconst GET_BINANCE_MARKET_NAMES = \"GET_BINANCE_MARKET_NAMES\";\nconst GET_BINANCE_MARKET_NAMES_SUCCESS = \"GET_BINANCE_MARKET_NAMES_SUCCESS\";\nconst GET_BINANCE_MARKET_NAMES_ERROR = \"GET_BINANCE_MARKET_NAMES_ERROR\";\n\n\nconst startInitAsync = () => ({ type: START_INIT_ASYNC });\nconst startInit = () => ({ type: START_INIT });\n\n\n//✅ coinOne\nconst getcoinOneAllMarketNameSaga = createRequestSaga(\n    GET_COINONE_MARKET_NAMES,\n    coinoneApi.getMarketCodes,\n    coinListDataUtils.coinoneAllNames\n);\n\n//✅ Kucoin\nconst getKucoinAllMarketNameSaga = createRequestSaga(\n    GET_KUCOIN_MARKET_NAMES,\n    kucoinApi.getMarketCodes,\n    coinListDataUtils.kucoinAllNames\n);\n\nconst getUpbitAllMarketNameSaga = createRequestSaga(\n    GET_UPBIT_MARKET_NAMES,\n    upbitoinApi.getMarketCodes,\n    coinListDataUtils.upbitAllNames\n);\nconst getBinanceMarketNameSaga = createRequestSaga(\n    GET_BINANCE_MARKET_NAMES,\n    binancecoinApi.getMarketCodes,\n    coinListDataUtils.binanceNames\n);\nconst getBithumbKRWMarketNameSaga = createRequestSaga(\n    GET_BITHUMB_MARKET_KRW_NAMES,\n    bithumbcoinApi.getKRWMarketCodes,\n    coinListDataUtils.bithumbKRWNames\n);\nconst getBithumbBTCMarketNameSaga = createRequestSaga(\n    GET_BITHUMB_MARKET_BTC_NAMES,\n    bithumbcoinApi.getBTCMarketCodes,\n    coinListDataUtils.bithumbBTCNames\n);\n\nconst getUpbitMarketPriceInitSaga = createRequestSaga(\n    GET_UPBIT_MARKET_PRICE_INIT,\n    upbitoinApi.getMarketPriceCodes,\n    coinListDataUtils.upbitPriceNames\n);\n\n\n\n\n//✅ 업비트 소켓 연결\nconst connectUpbitSocketSaga = createConnectSocketSaga(\n    CONNECT_UPBIT_SOCKET,\n    \"ticker\",\n    coinReadDataUtils.upbitUpdates\n);\n\nconst createUpbitInitSocketSaga = createInitRequestSaga(\n    CREATE_UPBIT_INIT,\n    coinReadDataUtils.upbitInitNames\n);\n//✅ 빗썸 소켓 연결\nconst createBithumbInitSocketSaga = createInitRequestSaga(\n    CREATE_BITHUMB_INIT,\n    coinReadDataUtils.bithumbInitNames\n);\n\n\nfunction* startInitSaga() {\n    yield getUpbitAllMarketNameSaga();\n    yield getUpbitMarketPriceInitSaga();\n\n    yield getBithumbKRWMarketNameSaga();\n    yield getBithumbBTCMarketNameSaga();\n\n    yield getBinanceMarketNameSaga();\n\n    //✅ kucoin\n    //yield getKucoinAllMarketNameSaga();\n    //✅ coinone\n    //yield getcoinOneAllMarketNameSaga();\n    const state = yield select();\n\n    const upbitmarketNames = state.Coin.upbitTotalNames.data;\n    yield createUpbitInitSocketSaga({ payload: upbitmarketNames });\n\n    const bithumbmarketNames = state.Coin.bithumbTotalNames.data;\n    yield createBithumbInitSocketSaga({ payload: bithumbmarketNames });\n\n    const marketNames = Object.keys(state.Coin.upbitTotalNames.data);\n    yield connectUpbitSocketSaga({ payload: marketNames });\n}\nfunction* coinSaga() {\n    yield takeEvery(START_INIT, startInitSaga);\n}\n\nconst initialState = {\n    upbitTotalNames: {\n        data: {\n            \"KRW-BTC\": \"\"\n        },\n    },\n    bithumbTotalNames: {\n        data: {\n            \"BTC_KRW\": \"\"\n        },\n    },\n    binanceTotalNames: {\n        data: {\n            \"ETHBTC\": \"\"\n        }\n    },\n    marketNames: {\n        error: false,\n        data: {\n            \"BTC\": {\n                imgsrc: \"\",\n                gecko: \"\",\n                upbitSym: \"\", upbitKRWPrice: \"\",\n                upbitBTC: \"\", upbitBTCPrice: \"\",\n                upbitUSDT: \"\", upbitUSDTPrice: \"\",\n                bithumbSym: \"\", bithumbPrice: \"\",\n                bithumbBTC: \"\", bithumbBTCPrice: \"\",\n                binanBTCSym: \"\", binanBTCPrice: \"\",\n                binanUSDTSym: \"\", binanUSDTPrice: \"\",\n                binanBNBSym: \"\", binanBNBPrice: \"\",\n\n                calKoupbitBTC: \"\",\n                calKobithumbBTC: \"\",\n                calKobinanBTC: \"\",\n                calKoupbitUSDT: \"\",\n                calKoUSDT: \"\",\n                calKoBUSD: \"\"\n            },\n        },\n    },\n    TOPmarketString: [],\n    TOPmarketNames: [],\n};\n\nconst coinReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_BINANCE_MARKET_NAMES_SUCCESS:\n        case GET_BINANCE_MARKET_NAMES_ERROR:\n            return requestActions(GET_BINANCE_MARKET_NAMES, \"binanceTotalNames\")(state, action);\n\n        case GET_UPBIT_MARKET_NAMES_SUCCESS:\n        case GET_UPBIT_MARKET_NAMES_ERROR:\n            return requestActions(GET_UPBIT_MARKET_NAMES, \"upbitTotalNames\")(state, action);\n\n        case GET_UPBIT_MARKET_PRICE_INIT_SUCCESS:\n        case GET_UPBIT_MARKET_PRICE_INIT_ERROR:\n            return requestActions(GET_UPBIT_MARKET_PRICE_INIT, \"upbitTotalNames\")(state, action);\n\n        case GET_BITHUMB_MARKET_KRW_NAMES_SUCCESS:\n        case GET_BITHUMB_MARKET_KRW_NAMES_ERROR:\n            return requestActions(GET_BITHUMB_MARKET_KRW_NAMES, \"bithumbTotalNames\")(state, action);\n\n        case GET_BITHUMB_MARKET_BTC_NAMES_SUCCESS:\n        case GET_BITHUMB_MARKET_BTC_NAMES_ERROR:\n            return requestActions(GET_BITHUMB_MARKET_BTC_NAMES, \"bithumbTotalNames\")(state, action);\n\n        case CREATE_UPBIT_INIT_SUCCESS:\n        case CREATE_UPBIT_INIT_ERROR:\n            return requestActions(CREATE_UPBIT_INIT, \"marketNames\")(state, action);\n\n        case CREATE_BITHUMB_INIT_SUCCESS:\n        case CREATE_BITHUMB_INIT_ERROR:\n            return requestActions(CREATE_BITHUMB_INIT, \"marketNames\")(state, action);\n\n        case CONNECT_UPBIT_SOCKET_SUCCESS:\n        case CONNECT_UPBIT_SOCKET_ERROR:\n            return requestActions(CONNECT_UPBIT_SOCKET, \"marketNames\")(state, action);\n\n        case START_INIT:\n            return state;\n        default:\n            return state;\n    }\n}\nexport {\n    coinReducer,\n    coinSaga,\n    startInit,\n    connectUpbitSocketSaga,\n    startInitAsync\n}","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/container/CoinContainer.js",["62","63","64","65","66","67"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CoinList from '../components/CoinList';\nimport \"../components/CoinList.css\";\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\n\nfunction CoinContainer() {\n    var coinTotal = useSelector((state) => state.Coin.marketNames);\n\n    var TOPcoinTotalmain = useSelector((state) => state.Coin.TOPmarketNames);\n    //console.log(TOPcoinTotalmain);\n    // const TOPcoinTotal = Object.keys(TOPcoinTotalmain);\n\n    const binanceUsdt = coinTotal.data['USDTKRW'];\n    const BTCdata = coinTotal.data['BTC'];\n\n\n    if (!TOPcoinTotalmain) return null;\n    if (!binanceUsdt) return null;\n    if (!coinTotal) return null;\n\n    var test = TOPcoinTotalmain.filter((name, idx, arr) => {\n        return arr.findIndex((item) => item.MainSym === name.MainSym) === idx\n    })\n    //console.log('test', test)\n\n    //console.log('test', test)\n    test.sort((next, prev) => {\n        //console.log(next);\n        if (parseFloat(next.per) > parseFloat(prev.per)) {\n            return -1;\n        }\n        else\n            return 0;\n    });\n    //console.log(TOPcoinTotalmain);\n    //console.log(TOPcoinTotalmain['PNT'])\n    /*\n        var test = '';\n        TOPcoinTotalmain.forEach((name) => {\n            test += name.MainSym + \" \"\n            //console.log(name)\n    \n        })*/\n\n    //console.log('main', TOPcoinTotalmain);\n    return (\n        <div>\n            <div className='coin-container'>\n                <div className=\"coin-row\" >\n                    <img className=\"exchange-img\" src={CoinMarketData[0].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {binanceUsdt.USDTsym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {binanceUsdt.USDTKRWPrice}\n                        </p>\n                    </div>\n\n\n                    <img className=\"exchange-img\" src={CoinMarketData[0].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {BTCdata.upbitSym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {BTCdata.upbitKRWPrice}\n                        </p>\n                    </div>\n\n                    <img className=\"exchange-img\" src={CoinMarketData[0].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {BTCdata.upbitUSDTSym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {BTCdata.upbitUSDTPrice}\n                        </p>\n                    </div>\n\n\n                    <img className=\"exchange-img\" src={CoinMarketData[1].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {BTCdata.bithumbSym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {BTCdata.bithumbPrice}\n                        </p>\n                    </div>\n\n\n                    <img className=\"exchange-img\" src={CoinMarketData[2].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {BTCdata.binanceUSDTSym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {BTCdata.binanceUSDTPrice}\n                        </p>\n                    </div>\n                    <img className=\"exchange-img\" src={CoinMarketData[2].imgsrc} />\n                    <div classame=\"coin-data\">\n                        <p className=\"coin-price\">\n                            {BTCdata.binanceBUSDSym}\n                        </p>\n                        <p className=\"coin-price\">\n                            {BTCdata.binanceBUSDPrice}\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            {\n                test.map((one_coin) => {\n                    return <CoinList key={`coinlist_${one_coin.MainSym}`} one_coin={one_coin} one_coin_Sym={one_coin.MainSym} />;\n                })\n            }\n\n        </div>\n    )\n}\n\nexport default CoinContainer;\n/*\n\n\n\n*/","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Api/api.js",["68","69","70","71","72","73","74","75"],"import axios from \"axios\";\nimport { useSelector } from 'react-redux';\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\nimport { call, put, select, flush, delay } from \"redux-saga/effects\";\nimport cors from 'cors';\n\nexport const gateioApi = {\n    getMarketCodes: () =>\n        axios.get(\"/api/v4/spot/tickers\")\n};\n\nexport const huobiApi = {\n    getMarketCodes: () =>\n        axios.get(\"/market/tickers\")\n};\n\nexport const kucoinApi = {\n    getMarketCodes: () =>\n        axios.get(\"/api/v1/market/allTickers\")\n};\n\nexport const coinoneApi = {\n    getMarketCodes: () =>\n        axios.get(\"/ticker?currency=all\")\n};\n\nexport const upbitoinApi = {\n    getMarketCodes: () =>\n        axios.get(\"https://api.upbit.com/v1/market/all?isDetails=false\"),\n    getMarketPriceCodes: () => {\n        return;\n    }\n};\n\nexport const binancecoinApi = {\n    getMarketCodes: () =>\n        axios.get(\"https://api1.binance.com/api/v3/ticker/price\")\n};\n\n\nexport const bithumbcoinApi = {\n    getKRWMarketCodes: () =>\n        axios.get(\"https://api.bithumb.com/public/ticker/ALL_KRW\"),\n    getBTCMarketCodes: () =>\n        axios.get(\"https://api.bithumb.com/public/ticker/ALL_BTC\")\n};\n\n","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Lib/asyncUtil.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/Lib/utils.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"\nimport axios from \"axios\";\nimport { Children } from \"react\";\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\n\nconst pricereturnFloat = (price) => {\n    let data = parseFloat(price);\n    if (data < 1.0) {\n        return data.toFixed(8);\n    }\n    else {\n        return data.toFixed(1);\n    }\n}\n\nconst coinListDataUtils = {\n    coinoneAllNames: (names) => {\n\n    },\n\n    kucoinAllNames: (names) => {\n        names.forEach(coinlist => {\n            var coinName = coinlist.symbol.split('-')[0];\n            var type = coinlist.symbol.split('-')[1];\n\n            var newCoin = false;\n            if (type !== 'ETH') {\n                CoinMarketData.find((name) => {\n                    if (name.symbol === coinName) {\n                        newCoin = true;\n                    }\n                });\n                if (newCoin === false) {\n                    console.log(coinName, type);\n                }\n            }\n        });\n    },\n\n    upbitAllNames: (names) => {\n        const data = {};\n        names.forEach(name => {\n            data[name.market] = {\n                korean: name.korean_name,\n            };\n        })\n        return data;\n    },\n    upbitPriceNames: (names, state) => {\n        const coinStateDatas = state.Coin.upbitTotalNames.data;\n        names.forEach(name => {\n            coinStateDatas[name.market] = {\n                korean: pricereturnFloat(name.trade_price),\n            };\n        })\n        return coinStateDatas;\n    },\n\n    binanceNames: (names) => {\n        const data = {};\n        names.forEach(name => {\n            if (name.symbol.lastIndexOf('BTC') !== -1) {\n                data[name.symbol] = {\n                    korean: name.price\n                };\n            } else if (name.symbol.lastIndexOf('USDT') !== -1) {\n                data[name.symbol] = {\n                    korean: name.price\n                };\n            } else if (name.symbol.lastIndexOf('BUSD') !== -1) {\n                data[name.symbol] = {\n                    korean: name.price\n                };\n            }\n        })\n        return data;\n    },\n    bithumbKRWNames: (names) => {\n        const data = {};\n        Object.keys(names).forEach(name => {\n            data[name + \"_KRW\"] = {\n                korean: pricereturnFloat(names[name].closing_price),\n            };\n        })\n        return data;\n    },\n    bithumbBTCNames: (names, state) => {\n        const coinStateDatas = state.Coin.bithumbTotalNames.data;\n        Object.keys(names).forEach(name => {\n            coinStateDatas[name + \"_BTC\"] = {\n                korean: pricereturnFloat(names[name].closing_price),\n            };\n        })\n        return coinStateDatas;\n    }\n};\n\nconst coinReadDataUtils = {\n    mixExchangeUpdates: (all_coin, state) => {\n        const coinStateDatas = state.Coin.marketNames.data;\n        const TOPmarketNames = state.Coin.TOPmarketNames;\n        const TOPmarketString = state.Coin.TOPmarketString;\n        var priceithdraw = [], minExchange = '', maxExchange = '';\n        Object.keys(all_coin).forEach((coin) => {\n            coinStateDatas[coin] = {\n                ...coinStateDatas[coin],\n                ...all_coin[coin]\n            }\n        });\n        var cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) / parseFloat(coinStateDatas['BTC'].upbitUSDTPrice)).toFixed(1)\n        coinStateDatas['USDTKRW'] = {\n            ...coinStateDatas['USDTKRW'],\n            \"USDTsym\": \"USDT-KRW\",\n            \"USDTKRWPrice\": cal\n        }\n\n\n\n        Object.keys(coinStateDatas).forEach((coin) => {\n            var read = coinStateDatas[coin];\n            var keyread = Object.keys(read);\n            var saveName = '', saveNamee = '';\n            var withdraw_cal = '';\n            var maxGap = 0, minGap = Number.MAX_SAFE_INTEGER;\n            cal = 0;\n            keyread.forEach((name) => {\n                if (name === 'bithumbKRWSym') {\n                    cal = parseFloat(coinStateDatas[coin].bithumbKRWPrice);// * parseFloat(coinStateDatas[coin].upbitUSDTPrice)).toFixed(1)\n                    saveName = 'calKobithumbKRW';\n\n                    var withdrawCheck = coinStateDatas[coin].bithumbWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKobithumbKRW'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                else if (name === 'upbitKRWSym') {\n                    cal = parseFloat(coinStateDatas[coin].upbitKRWPrice)// * parseFloat(coinStateDatas[coin].upbitUSDTPrice)).toFixed(1)\n                    saveName = 'calKoupbitKRW';\n\n                    var withdrawCheck = coinStateDatas[coin].upbitWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKoupbitKRW'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n\n                else if (name === 'coinoneKRWSym') {\n                    cal = parseFloat(coinStateDatas[coin].coinoneKRWPrice)// * parseFloat(coinStateDatas[coin].upbitUSDTPrice)).toFixed(1)\n                    saveName = 'calKocoinoneKRW';\n\n                    var withdrawCheck = coinStateDatas[coin].coinoneWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKocoinoneKRW'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n\n                else if (name === 'upbitUSDTSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].upbitUSDTPrice)).toFixed(1)\n                    saveName = 'calKoupbitUSDT';\n\n                    var withdrawCheck = coinStateDatas[coin].upbitWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKoupbitUSDT'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                // upbit BTC\n                else if (name === 'upbitBTCSym') {\n                    cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(coinStateDatas[coin].upbitBTCPrice)).toFixed(1)\n                    saveName = 'calKoupbitBTC';\n\n                    var withdrawCheck = coinStateDatas[coin].upbitWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n\n\n                    priceithdraw['calKoupbitBTC'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                // binance USDT\n                else if (name === 'binanceUSDTSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].binanceUSDTPrice)).toFixed(1)\n                    saveName = 'calKobinanceUSDT';\n\n                    var withdrawCheck = coinStateDatas[coin].binanceWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKobinanceUSDT'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                // binance BTC\n                else if (name === 'binanceBTCSym') {\n                    //if (coin === 'XRP')\n                    //    console.log(coinStateDatas['BTC'].upbitKRWPrice, coinStateDatas[coin].binanceBTCPrice);\n                    cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(coinStateDatas[coin].binanceBTCPrice)).toFixed(1)\n                    saveName = 'calKobinanceBTC';\n\n                    var withdrawCheck = coinStateDatas[coin].binanceWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n\n\n\n                    priceithdraw['calKobinanceBTC'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                // binance BUSD\n                else if (name === 'binanceBUSDSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].binanceBUSDPrice)).toFixed(1)\n                    saveName = 'calKobinanceBUSD';\n\n                    var withdrawCheck = coinStateDatas[coin].binanceWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKobinanceBUSD'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                // gateIO BTC\n                else if (name === 'gateioBTCSym') {\n                    cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(coinStateDatas[coin].gateioBTCPrice)).toFixed(1)\n                    saveName = 'calKogateioBTC';\n\n\n                    var withdrawCheck = coinStateDatas[coin].gateioWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = (withdrawCheck * parseFloat(cal)) + parseFloat(cal);\n                    priceithdraw['calKogateioBTC'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n\n\n\n                }\n                // gateIO USDT\n                else if (name === 'gateioUSDTSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].gateioUSDTPrice)).toFixed(1)\n                    saveName = 'calKogateioUSDT';\n\n\n                    var withdrawCheck = coinStateDatas[coin].gateioWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n\n                    priceithdraw['calKogateioUSDT'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                //huobi BTC\n                else if (name === 'huobiBTCSym') {\n                    cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(coinStateDatas[coin].huobiBTCPrice)).toFixed(1)\n                    saveName = 'calKohuobiBTC';\n\n                    var withdrawCheck = coinStateDatas[coin].huobiWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKohuobiBTC'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                //huobi USDT\n                else if (name === 'huobiUSDTSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].huobiUSDTPrice)).toFixed(1)\n                    saveName = 'calKohuobiUSDT';\n\n                    var withdrawCheck = coinStateDatas[coin].huobiWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKohuobiUSDT'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                //kucoin USDT\n                else if (name === 'kucoinUSDTSym') {\n                    cal = (parseFloat(coinStateDatas['USDTKRW'].USDTKRWPrice) * parseFloat(coinStateDatas[coin].kucoinUSDTPrice)).toFixed(1)\n                    saveName = 'calKokucoinUSDT';\n\n                    var withdrawCheck = coinStateDatas[coin].kucoinWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKokucoinUSDT'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                else if (name === 'kucoinBTCSym') {\n                    cal = (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(coinStateDatas[coin].kucoinBTCPrice)).toFixed(1)\n                    saveName = 'calKokucoinBTC';\n                    var withdrawCheck = coinStateDatas[coin].kucoinWithdraw;\n                    if (withdrawCheck === 'NO')\n                        withdrawCheck = 1;\n                    else if (withdrawCheck === '0')\n                        withdrawCheck = 1;\n                    else\n                        withdrawCheck = parseFloat(withdrawCheck);\n\n                    withdraw_cal = withdrawCheck * parseFloat(cal) + parseFloat(cal);\n                    priceithdraw['calKokucoinBTC'] = {\n                        'withdrawlCal': withdraw_cal,\n                        'Cal': cal\n                    }\n                }\n                if (cal != 0) {\n                    if (parseFloat(cal) > maxGap) {\n                        maxGap = parseFloat(cal);\n                        maxExchange = saveName;\n                    }\n                    if (parseFloat(cal) < minGap) {\n                        minGap = parseFloat(cal);\n                        minExchange = saveName;\n                    }\n                }\n                coinStateDatas[coin] = {\n                    ...coinStateDatas[coin],\n                    [saveName]: cal\n                }\n            });\n\n            var result = ((maxGap - minGap) / minGap * 100).toFixed(1);\n\n\n\n            if (maxExchange) {\n                var maxprice = priceithdraw[maxExchange].Cal;\n\n                keyread.forEach((name) => {\n                    if (name === 'calKoupbitUSDT' ||\n                        name === 'calKoupbitBTC' ||\n                        name === 'calKobinanceUSDT' ||\n                        name === 'calKobinanceBTC' ||\n                        name === 'calKobinanceBUSD' ||\n                        name === 'calKogateioBTC' ||\n                        name === 'calKogateioUSDT' ||\n                        name === 'calKohuobiBTC' ||\n                        name === 'calKohuobiUSDT' ||\n                        name === 'calKokucoinUSDT' ||\n                        name === 'calKokucoinBTC' ||\n                        name === 'calKocoinoneKRW' ||\n                        name === 'calKoupbitKRW' ||\n                        name === 'calKobithumbKRW'\n                    ) {\n                        var calcc = '';\n                        if (name !== maxExchange) {\n\n\n                            if (maxprice > parseFloat(priceithdraw[name].withdrawlCal)) {\n                                calcc = ((maxprice - parseFloat(priceithdraw[name].withdrawlCal)) / parseFloat(priceithdraw[name].withdrawlCal) * 100).toFixed(1)\n                            }\n                            else {\n                                calcc = 0;\n                            }\n                            if (calcc < 0) {\n                                calcc = 0;\n                            }\n                            saveName = 'with_' + name\n\n\n\n                        } else {\n                            if (calcc != '0')\n                                calcc = \"MAX \" + calcc;\n                            else\n                                calcc = '0';\n                            saveName = 'with_' + name\n                        }\n\n                        if (name === minExchange) {\n                            calcc = \"MIN\" + calcc;\n                        }\n\n                        coinStateDatas[coin] = {\n                            ...coinStateDatas[coin],\n                            [saveName]: calcc,\n                            'per': result,\n                            'MainSym': coin\n                        }\n                    }\n                })\n            }\n        });\n        var coinStateCount = 0;\n        //var coinStringMake = \"\";\n        //var test = \"\";\n        //var dataFactory = [];\n        Object.keys(coinStateDatas).forEach((coinOne) => {\n            if (coinStateDatas[coinOne].per > 2) {\n                TOPmarketNames[coinStateCount] = coinStateDatas[coinOne];//coinStateDatas[coinOne]\n                coinStateCount++;\n\n                //test += coinOne + \" \";\n            }\n        })\n        //TOPmarketNames = dataFactory;\n        //TOPmarketNames.pop();\n\n\n        return coinStateDatas;\n    },\n    //\n    upbitInitNames: (names, state) => {\n\n        var stringdd = \"\";\n        CoinMarketData.find((name) => {\n            stringdd += name.symbol + \" \"\n        });\n        const data = {};\n        Object.keys(names).forEach(name => {\n            let shortSym = name.split(\"-\")[1];\n            let moneySym = name.split(\"-\")[0];\n\n            if (shortSym === \"BTC\" && moneySym === \"KRW\") {\n                data[shortSym] = {\n                    ...data[shortSym],\n                    upbitKRWPrice: names[name].korean,\n                    upbitSym: name,\n                }\n            } else if (shortSym === \"BTC\" && moneySym === \"USDT\") {\n                data[shortSym] = {\n                    ...data[shortSym],\n                    upbitUSDTPrice: names[name].korean,\n                    upbitUSDT: name,\n                }\n            }\n        })\n        data['USDT'] = {\n            ...data['USDT'],\n            upbitUSDTPrice: (data['BTC'].upbitKRWPrice / data['BTC'].upbitUSDTPrice).toFixed(1),\n            upbitUSDT: 'USDTKRW',\n        }\n\n        Object.keys(names).forEach(name => {\n\n            let shortSym = name.split(\"-\")[1];\n            let moneySym = name.split(\"-\")[0];\n            let imgsrc = \"\";\n            CoinMarketData.find((coin) => {\n                if (coin.symbol === shortSym) {\n                    imgsrc = coin.imgsrc;\n                }\n            })\n            if (moneySym === \"KRW\") {\n                data[shortSym] = {\n                    ...data[shortSym],\n                    upbitKRWPrice: names[name].korean,\n                    upbitSym: name,\n                    imgsrc: imgsrc\n                }\n            } else if (moneySym === \"USDT\") {\n                data[shortSym] = {\n                    ...data[shortSym],\n                    upbitUSDTPrice: names[name].korean,\n                    upbitUSDT: name,\n                    imgsrc: imgsrc,\n                    //calKoupbitUSDT: (parseFloat(data['USDT'].upbitUSDTPrice) * parseFloat(names[name].korean)).toFixed(1)\n                }\n            } else if (moneySym === \"BTC\") {\n                data[shortSym] = {\n                    ...data[shortSym],\n                    upbitBTCPrice: names[name].korean,\n                    upbitBTC: name,\n                    imgsrc: imgsrc,\n                    //calKoupbitBTC: (parseFloat(data['BTC'].upbitKRWPrice) * parseFloat(names[name].korean)).toFixed(2)\n                }\n            }\n        });\n        return data;\n    },\n    bithumbInitNames: (names, state) => {\n        const coinStateDatas = state.Coin.marketNames.data;\n\n        Object.keys(names).forEach(name => {\n            let shortSym = name.split(\"_\")[0];\n            let moneySym = name.split(\"_\")[1];\n\n            if (moneySym === \"KRW\") {\n                coinStateDatas[shortSym] = {\n                    ...coinStateDatas[shortSym],\n                    bithumbPrice: names[name].korean,\n                    bithumbSym: name,\n                }\n            } else if (moneySym === \"BTC\") {\n                coinStateDatas[shortSym] = {\n                    ...coinStateDatas[shortSym],\n                    bithumbBTCPrice: names[name].korean,\n                    bithumbBTC: name,\n                    calKobithumbBTC: (parseFloat(coinStateDatas['BTC'].upbitKRWPrice) * parseFloat(names[name].korean)).toFixed(2)\n                }\n            }\n        })\n\n\n        //!\n\n\n        return coinStateDatas;\n    }\n};\n\n\nexport {\n    coinListDataUtils,\n    coinReadDataUtils\n}","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/components/CoinList.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\n\nimport \"../components/CoinList.css\";\nfunction CoinList({ one_coin, one_coin_Sym }) {\n    //const upbitCoinList = Object.keys(coin);\n    const upbitimgsrc = CoinMarketData[0].imgsrc;\n    const bithumbimgsrc = CoinMarketData[1].imgsrc;\n    const binanceimgsrc = CoinMarketData[2].imgsrc;\n    const huobiimgsrc = CoinMarketData[3].imgsrc;\n    const gateioimgsrc = CoinMarketData[4].imgsrc;\n    const coinoneimgsrc = CoinMarketData[5].imgsrc;\n    const kucoinimgsrc = CoinMarketData[6].imgsrc;\n\n    var symimg;\n    CoinMarketData.find((coinchk) => {\n        if (coinchk.symbol === one_coin_Sym) {\n            symimg = coinchk.imgsrc;\n            return;\n        }\n    })\n\n    var allCoincal = [\n        \"with_calKoupbitKRW\", \"with_calKobithumbKRW\", \"with_calKocoinoneKRW\",\n        \"with_calKoupbitBTC\", \"with_calKobithumbBTC\", 'with_calKobinanceBTC',\n        \"with_calKogateioBTC\", \"with_calKohuobiBTC\", \"with_calKokucoinBTC\",\n        \"with_calKoupbitUSDT\", \"with_calKobinanceUSDT\", \"with_calKogateioUSDT\",\n        \"with_calKohuobiUSDT\", \"with_calKokucoinUSDT\", \"with_calKobinanceBUSD\"\n    ];\n    var perPlus = Array.from({ length: allCoincal.length })\n    var doubleperPlus = Array.from({ length: allCoincal.length }, () => 0)\n    var cnt = 0;\n    allCoincal.forEach((data) => {\n\n        if (String(one_coin[data]).indexOf('MIN') !== -1 || String(one_coin[data]).indexOf('MAX') !== -1) {\n            doubleperPlus[cnt] = one_coin[data].slice(3, one_coin[data].length);\n\n            if (doubleperPlus[cnt] === \" \") {\n                doubleperPlus[cnt] = 'none';\n            } else if (doubleperPlus[cnt] === \"0\") {\n                doubleperPlus[cnt] = 'none';\n            } else if (doubleperPlus[cnt] === 0) {\n                doubleperPlus[cnt] = 'none';\n            }\n        }\n        if (doubleperPlus[cnt] === 0 && parseFloat(one_coin[data]) > 0) {\n            perPlus[cnt] = 'pluswith_' + data;\n        }\n        else if (doubleperPlus[cnt] !== '0' && doubleperPlus[cnt] !== \"none\" && doubleperPlus[cnt] !== 0) {\n            perPlus[cnt] = 'goldwith_' + data;\n        } else if (doubleperPlus[cnt] === 'none') {\n            perPlus[cnt] = \"minmaxwith_\" + data;\n        } else if (doubleperPlus[cnt] === 0) {\n            perPlus[cnt] = 'none';\n        }\n        cnt++;\n    })\n\n\n    return (\n        <div className='coin-container'>\n            <div className=\"coin-row\" >\n                <div className='coin'>\n                    <img src={symimg} />\n                    <h1>{one_coin_Sym}</h1>\n                </div>\n                <div>{one_coin.per}</div>\n                {one_coin.upbitKRWSym ? <img className=\"exchange-img\" src={upbitimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.upbitKRWSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.upbitKRWSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKoupbitKRW}\n                            </p>\n                            <p className={perPlus[0]}>\n                                {one_coin.with_calKoupbitKRW}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n                {one_coin.bithumbKRWSym ? <img className=\"exchange-img\" src={bithumbimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.bithumbKRWSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.bithumbKRWSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKobithumbKRW}\n                            </p>\n                            <p className={perPlus[1]}>\n                                {one_coin.with_calKobithumbKRW}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n\n                {one_coin.coinoneKRWSym ? <img className=\"exchange-img\" src={coinoneimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.coinoneKRWSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.coinoneKRWSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.coinoneKRWPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKocoinoneKRW}\n                            </p>\n                            <p className={perPlus[2]}>\n                                {one_coin.with_calKocoinoneKRW}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.upbitBTCSym ? <img className=\"exchange-img\" src={upbitimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.upbitBTCSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.upbitBTCSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.upbitBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKoupbitBTC}\n                            </p>\n                            <p className={perPlus[3]}>\n                                {one_coin.with_calKoupbitBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n                {one_coin.bithumbBTC ? <img className=\"exchange-img\" src={bithumbimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.bithumbBTC ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.bithumbBTC}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.bithumbBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKobithumbBTC}\n                            </p>\n                            <p className={perPlus[4]}>\n                                {one_coin.with_calKobithumbBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n                {one_coin.binanceBTCSym ? <img className=\"exchange-img\" src={binanceimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.binanceBTCSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceBTCSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKobinanceBTC}\n                            </p>\n                            <p className={perPlus[5]}>\n                                {one_coin.with_calKobinanceBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n\n                {one_coin.gateioBTCSym ? <img className=\"exchange-img\" src={gateioimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.gateioBTCSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.gateioBTCSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.gateioBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKogateioBTC}\n                            </p>\n                            <p className={perPlus[6]}>\n                                {one_coin.with_calKogateioBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.huobiBTCSym ? <img className=\"exchange-img\" src={huobiimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.huobiBTCSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.huobiBTCSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.huobiBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKohuobiBTC}\n                            </p>\n                            <p className={perPlus[7]}>\n                                {one_coin.with_calKohuobiBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.kucoinBTCSym ? <img className=\"exchange-img\" src={kucoinimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data\">\n                    {one_coin.kucoinBTCSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.kucoinBTCSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.kucoinBTCPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKokucoinBTC}\n                            </p>\n                            <p className={perPlus[8]}>\n                                {one_coin.with_calKokucoinBTC}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.upbitUSDTSym ? <img className=\"exchange-img\" src={upbitimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n\n                    {one_coin.upbitUSDTSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.upbitUSDTSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.upbitUSDTPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKoupbitUSDT}\n                            </p>\n                            <p className={perPlus[9]}>\n                                {one_coin.with_calKoupbitUSDT}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n                {one_coin.binanceUSDTSym ? <img className=\"exchange-img\" src={binanceimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.binanceUSDTSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceUSDTSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceUSDTPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKobinanceUSDT}\n                            </p>\n                            <p className={perPlus[10]}>\n                                {one_coin.with_calKobinanceUSDT}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.gateioUSDTSym ? <img className=\"exchange-img\" src={gateioimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n\n                    {one_coin.gateioUSDTSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.gateioUSDTSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.gateioUSDTPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKogateioUSDT}\n                            </p>\n                            <p className={perPlus[11]}>\n                                {one_coin.with_calKogateioUSDT}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.huobiUSDTSym ? <img className=\"exchange-img\" src={huobiimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.huobiUSDTSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.huobiUSDTSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.huobiUSDTPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKohuobiUSDT}\n                            </p>\n                            <p className={perPlus[12]}>\n                                {one_coin.with_calKohuobiUSDT}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.kucoinUSDTSym ? <img className=\"exchange-img\" src={kucoinimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.kucoinUSDTSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.kucoinUSDTSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.kucoinUSDTPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKokucoinUSDT}\n                            </p>\n                            <p className={perPlus[13]}>\n                                {one_coin.with_calKokucoinUSDT}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n\n                {one_coin.binanceBUSDSym ? <img className=\"exchange-img\" src={binanceimgsrc} /> :\n                    <div></div>\n                }\n                <div className=\"coin-data \">\n                    {one_coin.binanceBUSDSym ?\n                        <>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceBUSDSym}\n                            </p>\n                            <p className=\"coin-price\">\n                                {one_coin.binanceBUSDPrice}\n                            </p>\n                            <p className=\"coin-price\">\n                                K-{one_coin.calKobinanceBUSD}\n                            </p>\n                            <p className={perPlus[14]}>\n                                {one_coin.with_calKobinanceBUSD}%\n                            </p>\n                        </>\n                        :\n                        <span>\n                        </span>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CoinList;\n","/Users/sinhyeonsu/Documents/coingetprice_ver2.0/src/components/Coinone.js",["183","184","185","186"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CoinMarketData from \"../Api/CoinMarketData.json\";\nimport \"../components/CoinList.css\";\n\nfunction Coinone({ oneCoin }) {\n    var exchangeImg = \"\";\n    if (oneCoin.exchange === 'upbit') {\n        exchangeImg = CoinMarketData[0].imgsrc;\n    } else if (oneCoin.exchange === 'bithumb') {\n        exchangeImg = CoinMarketData[1].imgsrc;\n    } else if (oneCoin.exchange === 'binance') {\n        exchangeImg = CoinMarketData[2].imgsrc;\n    }\n\n    return (\n        <>\n            <img className=\"exchange-img\" src={exchangeImg} />\n\n            <div className=\"coin-data\" >\n                <p>\n                    {oneCoin.sym}\n                </p>\n                <p>\n                    KRW-{oneCoin.KrwPrice}\n                </p>\n                <p>\n                    {oneCoin.OriginPrice}\n                </p>\n            </div>\n        </>\n    )\n}\n\n\nexport default Coinone;",["187","188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":10,"column":7,"nodeType":"195","messageId":"196","endLine":10,"endColumn":39},{"ruleId":"193","severity":1,"message":"197","line":11,"column":7,"nodeType":"195","messageId":"196","endLine":11,"endColumn":38},{"ruleId":"193","severity":1,"message":"198","line":14,"column":7,"nodeType":"195","messageId":"196","endLine":14,"endColumn":38},{"ruleId":"193","severity":1,"message":"199","line":15,"column":7,"nodeType":"195","messageId":"196","endLine":15,"endColumn":36},{"ruleId":"193","severity":1,"message":"200","line":55,"column":7,"nodeType":"195","messageId":"196","endLine":55,"endColumn":34},{"ruleId":"193","severity":1,"message":"201","line":62,"column":7,"nodeType":"195","messageId":"196","endLine":62,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":51,"column":21,"nodeType":"204","endLine":51,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":62,"column":21,"nodeType":"204","endLine":62,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":72,"column":21,"nodeType":"204","endLine":72,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":83,"column":21,"nodeType":"204","endLine":83,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":94,"column":21,"nodeType":"204","endLine":94,"endColumn":84},{"ruleId":"202","severity":1,"message":"203","line":103,"column":21,"nodeType":"204","endLine":103,"endColumn":84},{"ruleId":"193","severity":1,"message":"205","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"206","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":22},{"ruleId":"193","severity":1,"message":"207","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"208","line":4,"column":16,"nodeType":"195","messageId":"196","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"209","line":4,"column":21,"nodeType":"195","messageId":"196","endLine":4,"endColumn":27},{"ruleId":"193","severity":1,"message":"210","line":4,"column":29,"nodeType":"195","messageId":"196","endLine":4,"endColumn":34},{"ruleId":"193","severity":1,"message":"211","line":4,"column":36,"nodeType":"195","messageId":"196","endLine":4,"endColumn":41},{"ruleId":"193","severity":1,"message":"212","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":12},{"ruleId":"193","severity":1,"message":"213","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":21},{"ruleId":"193","severity":1,"message":"214","line":12,"column":10,"nodeType":"195","messageId":"196","endLine":12,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":25,"column":69,"nodeType":"217","messageId":"218","endLine":25,"endColumn":71},{"ruleId":"193","severity":1,"message":"219","line":112,"column":7,"nodeType":"195","messageId":"196","endLine":112,"endColumn":26},{"ruleId":"193","severity":1,"message":"220","line":152,"column":7,"nodeType":"195","messageId":"196","endLine":152,"endColumn":23},{"ruleId":"193","severity":1,"message":"221","line":199,"column":13,"nodeType":"195","messageId":"196","endLine":199,"endColumn":29},{"ruleId":"193","severity":1,"message":"222","line":213,"column":13,"nodeType":"195","messageId":"196","endLine":213,"endColumn":21},{"ruleId":"193","severity":1,"message":"223","line":230,"column":21,"nodeType":"195","messageId":"196","endLine":230,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":235,"column":35,"nodeType":"217","messageId":"226","endLine":246,"endColumn":22},{"ruleId":"224","severity":1,"message":"227","line":249,"column":25,"nodeType":"217","messageId":"226","endLine":249,"endColumn":50},{"ruleId":"224","severity":1,"message":"228","line":292,"column":66,"nodeType":"217","messageId":"226","endLine":307,"endColumn":22},{"ruleId":"224","severity":1,"message":"229","line":308,"column":66,"nodeType":"217","messageId":"226","endLine":322,"endColumn":22},{"ruleId":"224","severity":1,"message":"230","line":325,"column":52,"nodeType":"217","messageId":"226","endLine":363,"endColumn":22},{"ruleId":"215","severity":1,"message":"231","line":325,"column":63,"nodeType":"217","messageId":"232","endLine":325,"endColumn":65},{"ruleId":"233","severity":1,"message":"234","line":352,"column":37,"nodeType":"235","messageId":"236","endLine":352,"endColumn":39},{"ruleId":"215","severity":1,"message":"237","line":360,"column":33,"nodeType":"238","messageId":"239","endLine":360,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":366,"column":25,"nodeType":"195","messageId":"242","endLine":366,"endColumn":33},{"ruleId":"240","severity":1,"message":"243","line":366,"column":40,"nodeType":"195","messageId":"242","endLine":366,"endColumn":48},{"ruleId":"240","severity":1,"message":"244","line":366,"column":55,"nodeType":"195","messageId":"242","endLine":366,"endColumn":63},{"ruleId":"240","severity":1,"message":"245","line":366,"column":70,"nodeType":"195","messageId":"242","endLine":366,"endColumn":77},{"ruleId":"240","severity":1,"message":"246","line":366,"column":93,"nodeType":"195","messageId":"242","endLine":366,"endColumn":105},{"ruleId":"240","severity":1,"message":"247","line":367,"column":25,"nodeType":"195","messageId":"242","endLine":367,"endColumn":39},{"ruleId":"224","severity":1,"message":"248","line":369,"column":58,"nodeType":"217","messageId":"226","endLine":475,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":371,"column":44,"nodeType":"251","messageId":"252","endLine":389,"endColumn":26},{"ruleId":"215","severity":1,"message":"253","line":391,"column":56,"nodeType":"217","messageId":"232","endLine":391,"endColumn":58},{"ruleId":"233","severity":1,"message":"234","line":462,"column":45,"nodeType":"235","messageId":"236","endLine":462,"endColumn":47},{"ruleId":"240","severity":1,"message":"241","line":477,"column":25,"nodeType":"195","messageId":"242","endLine":477,"endColumn":33},{"ruleId":"240","severity":1,"message":"243","line":477,"column":40,"nodeType":"195","messageId":"242","endLine":477,"endColumn":48},{"ruleId":"240","severity":1,"message":"244","line":477,"column":55,"nodeType":"195","messageId":"242","endLine":477,"endColumn":63},{"ruleId":"240","severity":1,"message":"245","line":477,"column":70,"nodeType":"195","messageId":"242","endLine":477,"endColumn":77},{"ruleId":"240","severity":1,"message":"246","line":477,"column":84,"nodeType":"195","messageId":"242","endLine":477,"endColumn":96},{"ruleId":"240","severity":1,"message":"247","line":478,"column":25,"nodeType":"195","messageId":"242","endLine":478,"endColumn":39},{"ruleId":"224","severity":1,"message":"254","line":479,"column":68,"nodeType":"217","messageId":"226","endLine":537,"endColumn":22},{"ruleId":"215","severity":1,"message":"231","line":479,"column":80,"nodeType":"217","messageId":"232","endLine":479,"endColumn":82},{"ruleId":"215","severity":1,"message":"253","line":492,"column":56,"nodeType":"217","messageId":"232","endLine":492,"endColumn":58},{"ruleId":"233","severity":1,"message":"234","line":524,"column":41,"nodeType":"235","messageId":"236","endLine":524,"endColumn":43},{"ruleId":"215","severity":1,"message":"237","line":532,"column":37,"nodeType":"238","messageId":"239","endLine":532,"endColumn":44},{"ruleId":"240","severity":1,"message":"241","line":539,"column":25,"nodeType":"195","messageId":"242","endLine":539,"endColumn":33},{"ruleId":"240","severity":1,"message":"244","line":539,"column":40,"nodeType":"195","messageId":"242","endLine":539,"endColumn":48},{"ruleId":"240","severity":1,"message":"245","line":539,"column":55,"nodeType":"195","messageId":"242","endLine":539,"endColumn":62},{"ruleId":"240","severity":1,"message":"247","line":540,"column":25,"nodeType":"195","messageId":"242","endLine":540,"endColumn":39},{"ruleId":"224","severity":1,"message":"255","line":541,"column":57,"nodeType":"217","messageId":"226","endLine":558,"endColumn":22},{"ruleId":"215","severity":1,"message":"231","line":541,"column":70,"nodeType":"217","messageId":"232","endLine":541,"endColumn":72},{"ruleId":"215","severity":1,"message":"237","line":556,"column":29,"nodeType":"238","messageId":"239","endLine":556,"endColumn":36},{"ruleId":"240","severity":1,"message":"241","line":561,"column":25,"nodeType":"195","messageId":"242","endLine":561,"endColumn":33},{"ruleId":"240","severity":1,"message":"243","line":561,"column":40,"nodeType":"195","messageId":"242","endLine":561,"endColumn":48},{"ruleId":"240","severity":1,"message":"244","line":561,"column":55,"nodeType":"195","messageId":"242","endLine":561,"endColumn":63},{"ruleId":"240","severity":1,"message":"245","line":561,"column":70,"nodeType":"195","messageId":"242","endLine":561,"endColumn":77},{"ruleId":"240","severity":1,"message":"256","line":561,"column":84,"nodeType":"195","messageId":"242","endLine":561,"endColumn":87},{"ruleId":"240","severity":1,"message":"246","line":561,"column":93,"nodeType":"195","messageId":"242","endLine":561,"endColumn":105},{"ruleId":"240","severity":1,"message":"247","line":562,"column":25,"nodeType":"195","messageId":"242","endLine":562,"endColumn":39},{"ruleId":"224","severity":1,"message":"257","line":563,"column":60,"nodeType":"217","messageId":"226","endLine":632,"endColumn":22},{"ruleId":"215","severity":1,"message":"231","line":563,"column":71,"nodeType":"217","messageId":"232","endLine":563,"endColumn":73},{"ruleId":"233","severity":1,"message":"234","line":566,"column":37,"nodeType":"235","messageId":"236","endLine":566,"endColumn":39},{"ruleId":"233","severity":1,"message":"234","line":581,"column":33,"nodeType":"235","messageId":"236","endLine":581,"endColumn":35},{"ruleId":"215","severity":1,"message":"253","line":591,"column":60,"nodeType":"217","messageId":"232","endLine":591,"endColumn":62},{"ruleId":"233","severity":1,"message":"234","line":617,"column":45,"nodeType":"235","messageId":"236","endLine":617,"endColumn":47},{"ruleId":"215","severity":1,"message":"237","line":626,"column":41,"nodeType":"238","messageId":"239","endLine":626,"endColumn":48},{"ruleId":"224","severity":1,"message":"258","line":635,"column":44,"nodeType":"217","messageId":"226","endLine":948,"endColumn":22},{"ruleId":"193","severity":1,"message":"259","line":909,"column":96,"nodeType":"195","messageId":"196","endLine":909,"endColumn":109},{"ruleId":"215","severity":1,"message":"231","line":912,"column":80,"nodeType":"217","messageId":"232","endLine":912,"endColumn":82},{"ruleId":"233","severity":1,"message":"234","line":933,"column":53,"nodeType":"235","messageId":"236","endLine":933,"endColumn":55},{"ruleId":"215","severity":1,"message":"237","line":941,"column":49,"nodeType":"238","messageId":"239","endLine":941,"endColumn":56},{"ruleId":"193","severity":1,"message":"260","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":13},{"ruleId":"193","severity":1,"message":"261","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"215","severity":1,"message":"262","line":28,"column":44,"nodeType":"217","messageId":"218","endLine":28,"endColumn":46},{"ruleId":"193","severity":1,"message":"263","line":102,"column":15,"nodeType":"195","messageId":"196","endLine":102,"endColumn":30},{"ruleId":"193","severity":1,"message":"264","line":122,"column":32,"nodeType":"195","messageId":"196","endLine":122,"endColumn":41},{"ruleId":"240","severity":1,"message":"265","line":149,"column":25,"nodeType":"195","messageId":"242","endLine":149,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":168,"column":25,"nodeType":"195","messageId":"242","endLine":168,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":188,"column":25,"nodeType":"195","messageId":"242","endLine":188,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":207,"column":25,"nodeType":"195","messageId":"242","endLine":207,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":228,"column":25,"nodeType":"195","messageId":"242","endLine":228,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":249,"column":25,"nodeType":"195","messageId":"242","endLine":249,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":271,"column":25,"nodeType":"195","messageId":"242","endLine":271,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":291,"column":25,"nodeType":"195","messageId":"242","endLine":291,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":314,"column":25,"nodeType":"195","messageId":"242","endLine":314,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":334,"column":25,"nodeType":"195","messageId":"242","endLine":334,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":353,"column":25,"nodeType":"195","messageId":"242","endLine":353,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":372,"column":25,"nodeType":"195","messageId":"242","endLine":372,"endColumn":38},{"ruleId":"240","severity":1,"message":"265","line":389,"column":25,"nodeType":"195","messageId":"242","endLine":389,"endColumn":38},{"ruleId":"233","severity":1,"message":"234","line":403,"column":25,"nodeType":"235","messageId":"236","endLine":403,"endColumn":27},{"ruleId":"233","severity":1,"message":"234","line":460,"column":39,"nodeType":"235","messageId":"236","endLine":460,"endColumn":41},{"ruleId":"193","severity":1,"message":"266","line":502,"column":13,"nodeType":"195","messageId":"196","endLine":502,"endColumn":21},{"ruleId":"215","severity":1,"message":"262","line":503,"column":36,"nodeType":"217","messageId":"218","endLine":503,"endColumn":38},{"ruleId":"215","severity":1,"message":"262","line":536,"column":40,"nodeType":"217","messageId":"218","endLine":536,"endColumn":42},{"ruleId":"193","severity":1,"message":"267","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"205","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"268","line":2,"column":23,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"215","severity":1,"message":"253","line":17,"column":35,"nodeType":"217","messageId":"232","endLine":17,"endColumn":37},{"ruleId":"215","severity":1,"message":"262","line":20,"column":13,"nodeType":"238","messageId":"239","endLine":20,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":65,"column":21,"nodeType":"204","endLine":65,"endColumn":41},{"ruleId":"202","severity":1,"message":"203","line":69,"column":41,"nodeType":"204","endLine":69,"endColumn":91},{"ruleId":"202","severity":1,"message":"203","line":90,"column":43,"nodeType":"204","endLine":90,"endColumn":95},{"ruleId":"202","severity":1,"message":"203","line":113,"column":43,"nodeType":"204","endLine":113,"endColumn":95},{"ruleId":"202","severity":1,"message":"203","line":138,"column":41,"nodeType":"204","endLine":138,"endColumn":91},{"ruleId":"202","severity":1,"message":"203","line":162,"column":40,"nodeType":"204","endLine":162,"endColumn":92},{"ruleId":"202","severity":1,"message":"203","line":186,"column":43,"nodeType":"204","endLine":186,"endColumn":95},{"ruleId":"202","severity":1,"message":"203","line":212,"column":42,"nodeType":"204","endLine":212,"endColumn":93},{"ruleId":"202","severity":1,"message":"203","line":237,"column":41,"nodeType":"204","endLine":237,"endColumn":91},{"ruleId":"202","severity":1,"message":"203","line":262,"column":42,"nodeType":"204","endLine":262,"endColumn":93},{"ruleId":"202","severity":1,"message":"203","line":287,"column":42,"nodeType":"204","endLine":287,"endColumn":92},{"ruleId":"202","severity":1,"message":"203","line":312,"column":44,"nodeType":"204","endLine":312,"endColumn":96},{"ruleId":"202","severity":1,"message":"203","line":337,"column":43,"nodeType":"204","endLine":337,"endColumn":94},{"ruleId":"202","severity":1,"message":"203","line":363,"column":42,"nodeType":"204","endLine":363,"endColumn":92},{"ruleId":"202","severity":1,"message":"203","line":388,"column":43,"nodeType":"204","endLine":388,"endColumn":94},{"ruleId":"202","severity":1,"message":"203","line":413,"column":44,"nodeType":"204","endLine":413,"endColumn":96},{"ruleId":"193","severity":1,"message":"267","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"205","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"268","line":2,"column":23,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":18,"column":13,"nodeType":"204","endLine":18,"endColumn":63},{"ruleId":"189","replacedBy":"269"},{"ruleId":"191","replacedBy":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'GET_COINONE_MARKET_NAMES_SUCCESS' is assigned a value but never used.","Identifier","unusedVar","'GET_COINEONE_MARKET_NAMES_ERROR' is assigned a value but never used.","'GET_KUCOIN_MARKET_NAMES_SUCCESS' is assigned a value but never used.","'GET_KUCOIN_MARKET_NAMES_ERROR' is assigned a value but never used.","'getcoinOneAllMarketNameSaga' is assigned a value but never used.","'getKucoinAllMarketNameSaga' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","'CoinMarketData' is defined but never used.","'call' is defined but never used.","'put' is defined but never used.","'select' is defined but never used.","'flush' is defined but never used.","'delay' is defined but never used.","'cors' is defined but never used.","'upbitmarket' is defined but never used.","'conforms' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createBithumbSocket' is assigned a value but never used.","'bitconnectSocekt' is assigned a value but never used.","'bitclientChannel' is defined but never used.","'err_coin' is assigned a value but never used.","'sortedData' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'sortedObj', 'sortedObj', 'sortedObj', 'sortedObj', 'sortedObj', 'sortedObj'.","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'sortedObj'.","Function declared in a loop contains unsafe references to variable(s) 'bithumbKRWObj', 'Allobj', 'Allobj', 'bithumbKRWObj'.","Function declared in a loop contains unsafe references to variable(s) 'bithumbBTCObj', 'Allobj', 'Allobj', 'bithumbBTCObj'.","Function declared in a loop contains unsafe references to variable(s) 'shortSym', 'sortedDATA', 'moneySym', 'sortedDATA', 'nowPrice', 'sortedDATA', 'shortSym', 'sortedDATA', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveSym', 'Allobj', 'shortSym', 'Allobj', 'shortSym', 'saveSym', 'nowPrice', 'saveCoinName', 'sortedDATA', 'doubleSymcheck'.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-redeclare","'shortSym' is already defined.","redeclared","'moneySym' is already defined.","'nowPrice' is already defined.","'saveSym' is already defined.","'saveCoinName' is already defined.","'doubleSymcheck' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'binanceObj', 'exceptionflag', 'exceptionflag', 'exceptionflag', 'len', 'moneySym', 'len', 'moneySym', 'len', 'moneySym', 'len', 'moneySym', 'shortSym', 'len', 'nowPrice', 'moneySym', 'shortSym', 'moneySym', 'shortSym', 'moneySym', 'shortSym', 'moneySym', 'shortSym', 'moneySym', 'shortSym', 'moneySym', 'moneySym', 'moneySym', 'shortSym', 'shortSym', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'saveSym', 'Allobj', 'shortSym', 'Allobj', 'shortSym', 'saveSym', 'nowPrice', 'saveCoinName', 'doubleSymcheck'.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","Array.prototype.find() expects a value to be returned at the end of arrow function.","Function declared in a loop contains unsafe references to variable(s) 'shortSym', 'kucoinObj', 'moneySym', 'kucoinObj', 'nowPrice', 'kucoinObj', 'exceptionflag', 'kucoinObj', 'exceptionflag', 'exceptionflag', 'shortSym', 'shortSym', 'shortSym', 'shortSym', 'shortSym', 'shortSym', 'kucoinObj', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveSym', 'Allobj', 'shortSym', 'Allobj', 'shortSym', 'saveSym', 'nowPrice', 'saveCoinName', 'kucoinObj', 'doubleSymcheck'.","Function declared in a loop contains unsafe references to variable(s) 'nowPrice', 'coinoneObj', 'Allobj', 'Allobj', 'nowPrice'.","'len' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'huobiObj', 'nowPrice', 'huobiObj', 'len', 'moneySym', 'len', 'moneySym', 'len', 'moneySym', 'shortSym', 'len', 'shortSym', 'len', 'exceptionflag', 'shortSym', 'exceptionflag', 'exceptionflag', 'shortSym', 'shortSym', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveCoinName', 'doubleSymcheck', 'moneySym', 'saveSym', 'saveSym', 'Allobj', 'shortSym', 'Allobj', 'shortSym', 'saveSym', 'nowPrice', 'saveCoinName', 'doubleSymcheck'.","Function declared in a loop contains unsafe references to variable(s) 'gateioObj', 'gateioObj', 'gateioObj', 'gateioObj', 'saveCoinName', 'saveCoinName', 'Allobj', 'Allobj', 'saveCoinName', 'gateioObj'.","'saveCoinNamev' is assigned a value but never used.","'axios' is defined but never used.","'Children' is defined but never used.","Array.prototype.find() expects a return value from arrow function.","'TOPmarketString' is assigned a value but never used.","'saveNamee' is assigned a value but never used.","'withdrawCheck' is already defined.","'stringdd' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.",["271"],["272"],"no-global-assign","no-unsafe-negation"]